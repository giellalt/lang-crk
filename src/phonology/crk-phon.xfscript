! Copyright © 2015–2019 Alberta Language Technology Lab (ALTLab)
! http://altlab.artsrn.ualberta.ca/
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU Affero General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! This program is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU Affero General Public License for more details.
!
! You should have received a copy of the GNU Affero General Public License
! along with this program. If not, see <https://www.gnu.org/licenses/>.

!! Definitions

define Bx [ %> | %< ] ;
  
define Ix [ i | i2 | ii2 ] ;
  
define Vowel [ a | â | ê | i | î | o | ô ] ;

define Consonant [ c | h | k | m | n | p | s | t | w | y | ý ] ;
  
define Gx [ w | y | ý ] ;

!! Rules

!! VG>i2 -> VV

! ##locative, dim, poss -im VGi > V: - i from *e, i2 (CHANGE OTHER i2)
! ##-i2hk, -i2nâhk, -i2s(is), -i2m
! ##also for possessive suffixes -i2nân, -i2naw/-i2nânaw, -i2wâw, -i2yiw(a)
! ##also for VTAs, done below

define VGi2aaRule [ [ a | â ] [ Gx | "^COM" ] %> i2 -> â %> ] ;

define VGi2eeRule [ ê [ Gx | "^COM" ] %> i2 -> ê %> ] ;

define VGi2iiRule [ [ i | î ] [ Gx | "^COM" ] %> i2 -> î %> ] ;

define VGi2ooRule [ [ o | ô ] [ Gx | "^COM" ] %> i2 -> ô %> ] ;

define VGi2VVRule [ VGi2aaRule .o. VGi2eeRule .o. VGi2iiRule .o. VGi2ooRule ] ;

!!€ mêskanaw>i2^DIMs
!!€ mêskanâ000s 

!!€ mêskanaw>i2hk
!!€ mêskanâ000hk

!!€ sôniyâw>i2^DIMs
!!€ sôniyâ000s0

!!€ miskotâkay>i2^DIMs
!!€ miskocâkâ000s0

!!€ nâpêw>i2^DIMsis
!!€ nâpê0000sis

!!€ iskwêw>i2^DIMsis
!!€ iskwê0000sis

!!€ maskosiy>i2^DIMs
!!€ maskosî0000s

!!€ pikiw>i2^DIMs
!!€ pikî0000s

!!€ maskosiy>i2hk
!!€ maskosî000hk

!!€ sîwâpoy>i2^DIMs
!!€ sîwâpô0000s

!!€ tohtôsâpoy>i2hk
!!€ tohtôsâpô000hk

! #iiRule i-i2 > i

define iiRule [ i2 -> 0 || i Bx _ ] ;

!!€ wâwi>i2^DIMs
!!€ wâwi000s

!!€ ôsi>i2hk
!!€ ôsi00hk

! #Cwi > Co (i and i2)

define Cwi2CoôRule [ w %> [ i | i2 ] -> %> o ,, w %> ii2 -> %> ô  || Consonant _ ] ;

!!€ atimw>i2^DIMs
!!€ acimo000s

!!€ mistikw>i2hk
!!€ mistiko00hk
! 
! #no change after plain consonants, i2:i
! 
!!€ sâkahikan>i2^DIMs
!!€ sâkahikan0i0s

!!€ maskisin>i2hk
!!€ maskisin0ihk
! 
! ## Cw# > C

define wFinalRule [ w -> 0 || Consonant _ .#. ] ;

!!€ atimw
!!€ atim0

!!€ askihkw
!!€ askihk0

!!€ nit2<nînihikw
!!€ ni00nînihik

define etanRule [ a -> ê || _ %> t â n .#. ] ;

!!€ a>tân
!!€ ê0tân

! ##diminutive sound symbolism palatalisation (requires DIM trigger?)
! #{t,t2} > c / _...DIM

define DimRule [ t -> c || _ ?* "^DIM" ] ;

! #nicascocinis
!!€ nit2<astotin>i2^DIMs
!!€ nic0ascocin0i0s

!!!!!! 
! ! 
! ! ##connecting t - independent verbs, possessed nouns
! ! ##t2 > t / _V

define t2epenthesisRule [ t2 -> 0 || _ %< Consonant ,, t2 -> t || _ %< Vowel ] ;

! define t-epenthesisDimRule [ t2 -> c || _ %< Vowel ?* "^DIM" ] ;

! ! #nitapin - VAI 1Sg
! !!€ nit2<api>n
! !!€ nit0api0n
! 
! #kitapinaw - VAI 12Pl
! !!€ kit2<api>n 
! !!€ kit0api0n
! 
! #otastotin - NI Px3Sg 
! !!€ ot2<astotin
! !!€ ot0astotin
! 
! ! 
! ! ##o>w for certain possessed nouns (but these are dependent, why not handled with kinship?)
! ! ##previously seen before î, a, â?, and iy (phonetically îy)
! ! ##new tag w2 (can become w2 after other changes, discussed for VTA-2)
! ! 
! ! #wiyâw
! o:w %<:0 i y â w2:w
! 
! !!€ o>iyâw2
! !!€ w0iyâw
! 
! #wîpit
! o:w %<:0 î p i t 
! 
! !!€ o>îpit
! !!€ w0îpit
! 
! #wahkwan
! o:w %<:0 a h k w a n
! 
! !!€ o>ahkwan
! !!€ w0ahkwan 
! ! 
! ! 
! ! ##ê > â _-n - independent 1/2 VAI-v, VTI-v

! "h-epenthesisRule"
! %^EGLOT:h <=> :Vowel ( %^IC:0 ) _ %<:0 [ d1:0 | d2:0 | :Vowel ] ;

define h2epenthesisRule [ "^EGLOT" -> h || Vowel _ %< Vowel ] .o. [ "^EGLOT" -> 0 ] ;

!!€ ê^EGLOT<acimo>t
!!€ êh0acimo0t

!!€ ê^EGLOT<d1ay2<acimo>t
!!€ êh00ay0acimo0t

!!€ ê^EGLOT<d2ay3d1âh<acimo>t
!!€ êh00ay0âh0acimo0t

define ee2aaVAIRule [ ê -> â || _ %> n2 ] ;

! #ninêhiyawân - VAI 1Sg
!!€ nit2<nêhiyawê>n2 
!!€ ni00nêhiyawâ0n
!  
! #kikâsîhkwân
!!€ kit2<kâsîhkwê>n2
!!€ ki00kâsîhkwâ0n
! 
! 
! ##a > ê / _-n - independent 1/2 VTI-t
! -an > -ên

define a2eeVTIRule [ a -> ê || _ %> n2 ] ;

! #nitipiskên
!!€ nit2<tipiska>n2 
!!€ ni00tipiskê0n
! 
! #kikiskêyihtên
!!€ kit2<kiskêyihta>n2 
!!€ ki00kiskêyihtê0n
! 
! ! 
! ! 
! ! ##n-final VIIs that take -hk NEW SPECIAL CHARACTER (adapt for VAI-n?? e.g. n2 > 0 / _-hk)
! ! ## n > h / _-k

define n2hRule [ n3 -> h || _ %> k ] ;

! ! #ê-nîpihk
!!€ ê-<nîpin3>k 
!!€ ê-0nîpih0k

define n20VIIRule [ n -> 0 || _ %> k ] ;

! #ê-mispok
!!€ ê-<mispon>k 
!!€ ê-0mispo00k
! 

! Changes t4 to c when ikâtê follows in VTI

define t2cVTIRule [ t4 -> c || _ %> i k â t ê ] .o. [ t4 -> t ] ;

! #wapâhcikâtêw - V+TI+Der/X+V+II+3Sg
! w â p a h t:c %>:0 i k â t ê %> w  
! 
!!€ wapâht4>ikâtê>w 
!!€ wapâhc0ikâtê0w


! ##VTAs
! ##VTA-1
! 
! #no changes, but some marked exceptions
! #w2 so mowêw and ayawêw don't contract (wîcêwêw can do both - code two stems?)
! 
! #ê-mowiht - VTA X>3SgO
! ê - %<:0 m o w2:w %>:0 i2:i h t 

! Immutable 'w', which does not require rule

!!€ ê-<mow2>i2ht
!!€ ê-0mow0iht
! 
! #ê-ayawikoyâhk
!!€ ê-<ayaw2>i2koyâhk
!!€ ê-0ayaw0ikoyâhk 
! 
! ##VTA-3(Cw) act like Cw nouns for all i2 and i suffixes (summarised below)
! #mark as normal w, w>o applies for i and i2
! #seem to need î2? for delayed 2>1 imp
! 
! #kikîskison - VTA 2Sg>1SgO
!!€ kit2<kîskisw>in
!!€ ki00kîskiso00n
! 
! #nikîskisomâwa - VTA 1Sg>3'O
!!€ nit2<kîskisw>i2mâwa
!!€ ni00kîskiso00mâwa
! 
! #ê-kîskisotân - VTA 1Sg>2SgO
!!€ ê-<kîskisw>i2tân
!!€ ê-0kîskiso00tân
! 
! #ê-kîskisot
!!€ ê-<kîskisw>it 
!!€ ê-0kîskiso00t
! 
! #ê-kîskisosk - VTA 3Sg>2SgO
!!€ ê-<kîskisw>i2sk 
!!€ ê-0kîskiso00sk
! 
! #ê-kîskisokoyâhk - VTA 3Sg>1PlO
!!€ ê-<kîskisw>i2koyâhk 
!!€ ê-0kîskiso00koyâhk
!  
! #nikîskisokawin - VTA X>1SgO
!!€ nit2<kîskisw>i2kawin
!!€ ni00kîskiso00kawin
! 
! #kîskison - VTA imp 2Sg>1SgO
!!€ kîskisw>in 
!!€ kîskiso00n
! 
! #kîskisôhkan - VTA delayed 2Sg>1SgO
!!€ kîskisw>ii2hkan
!!€ kîskisô00hkan

! ##VTA-2(aw)
! ##requires new coding, i2 instead of WI trigger
! ##i does not trigger VGi > V:
! #i2 for all 1>2, -im... -iko..., -ikawi..., -i2sk, -i2ht, -i2hcik
! #î2 does not collapse
! 
! #kinitonawin - VTA 2Sg>1SgO
!!€ kit2<nitonaw>in 
!!€ ki00nitonaw0in
! 
! #ninitonâmâwa - VTA 1Sg>3'O
!!€ nit2<nitonaw>i2mâwa
!!€ ni00nitonâ000mâwa
! 
! #ê-nitonawitân - VTA 1Sg>2SgO
!!€ ê-<nitonaw>i2tân
!!€ ê-0nitonâ000tân
! 
! #ê-kîskisot
! 
!!€ ê-<nitonaw>it 
!!€ ê-0nitonaw0it
! 
! #ê-nitonâsk - VTA 3Sg>2SgO
!!€ ê-<nitonaw>i2sk 
!!€ ê-0nitonâ000sk
!  
! #ê-nitonâkoyâhk - VTA 3Sg>1PlO
!!€ ê-<nitonaw>i2koyâhk 
!!€ ê-0nitonâ000koyâhk
! 
! #ninitonâkawin - VTA X>1SgO
!!€ nit2<nitonaw>i2kawin
!!€ ni00nitonâ000kawin
! 
! #nitonawin - VTA imp 2Sg>1SgO
!!€ nitonaw>in 
!!€ nitonaw0in
! 
! #nitonawîhkan - VTA delayed 2Sg>1SgO
!!€ nitonaw>îhkan
!!€ nitonaw0îhkan
! 
! 
! ##VTA-4 (t3) 
! ## t3 > s / _{-i,-î2}; t3 > t / _-i2  

define t2sVTA4Rule [ t3 -> s || _ [ %> [ i | ii2 ] ] | .#. ,, t3 -> t || _ %> i2] ;

!!€ it3>i 
!!€ is0i
!
! #kinakasin - VTA 2Sg>1SgO
!!€ kit2<nakat3>in 
!!€ ki00nakas0in
! 
! #ninakatimâwa - VTA 1Sg>3'O
!!€ nit2<nakat3>i2mâwa 
!!€ ni00nakat0imâwa
! 
! #ê-nakatitân - VTA 1Sg>2SgO
!!€ ê-<nakat3>i2tân 
!!€ ê-0nakat0itân
! 
! #ê-nakasit
!!€ ê-<nakat3>it
!!€ ê-0nakas0it
! 
! #ê-nakatisk - VTA 3Sg>2SgO
!!€ ê-<nakat3>i2sk 
!!€ ê-0nakat0isk
! 
! #ê-nakatikoyâhk - VTA 3Sg>1PlO
!!€ ê-<nakat3>i2koyâhk 
!!€ ê-0nakat0ikoyâhk
! 
! #ninakatikawin - VTA X>1SgO
!!€ nit2<nakat3>i2kawin
!!€ ni00nakat0ikawin
! 
! #nakasin - VTA imp 2Sg>1SgO
!!€ nakat3>in 
!!€ nakas0in
! 
! #nakasîhkan - VTA delayed 2Sg>1SgO
!!€ nakat3>ii2hkan 
!!€ nakas0îhkan
! 
! 
! ##VTA idiosyncratic cases
! #s > 0 / _ t3-i -  just kostew

! "t3kostewRule"
! s:0 <=> _ t3:s ;

define t3kostewRule [ s -> 0 || _ s %> ] ; ! Needs to happen after t2sVTA4Rule

! #kikosin - VTA 2Sg>1SgO
!!€ kit2<kost3>in 
!!€ ki00ko0s0in
! 
! #nikostimâwa - VTA 1Sg>3'O
!!€ nit2<kost3>i2mâwa 
!!€ ni00kost0imâwa
! 
! #ê-kostitân - VTA 1Sg>2SgO
!!€ ê-<kost3>i2tân
!!€ ê-0kost0itân
! 
! #ê-kosit
!!€ ê-<kost3>it 
!!€ ê-0ko0s0it
! 
! #ê-kostisk - VTA 3Sg>2SgO
!!€ ê-<kost3>i2sk
!!€ ê-0kost0isk
! 
! #ê-kostikoyâhk - VTA 3Sg>1PlO
!!€ ê-<kost3>i2koyâhk
!!€ ê-0kost0ikoyâhk
!  
! #nikostikawin - VTA X>1SgO
!!€ nit2<kost3>i2kawin
!!€ ni00kost0ikawin
! 
! #kosin - VTA imp 2Sg>1SgO
!!€ kost3>in 
!!€ ko0s0in
! 
! #kosîhkan - VTA delayed 2Sg>1SgO
!!€ kost3>ii2hkan 
!!€ ko0s0îhkan
! 
! ##monosyllabic VTAs in the imp 2Sg>3Sg "TACONJ-5"
! #these have i as the inflection - ahêw, kostêw, itêw, ay-itêw
! #should be ahi, kosi, isi, ay-isi (by my logic, need to be checked)
! #making this i3 instead of i2 
! #i3 > i / _ # << i3 must act like i or î2, not i2
! #i3 > 0 otherwise << deletion rule can be tested with kostêw above
! #itêw has been marked as TACONJ-1, but it definitely has t>s in corpus
! 
! #isi - VTA imp 2Sg>3SgO
! i t3:s %>:0 i3:i 

! The following morphophonological changes implemented with their own
! specific continuation lexica

! !!€ it3>i3
! !!€ is0i
! 
! #kosi
! k o s:0 t3:s %>:0 i3:i 
! 
! !!€ kost3>i3 
! !!€ ko0s0i
! 
! #ahi
! a h %>:0 i3:i
! 
! !!€ ah>i3 
! !!€ ah0i

! Needed for diminutivization of mîwas with stem-final t3

define t3DimRule [ t3 -> c || _ %> i2 "^DIM" ] ;

!!€ mi4<îwat3>i2^DIMs
!!€ m00îwac0i0s

! Matching weak/strong reduplication consonant placeholder d1 with stem-initial consonant
! "ReduplCRule1"
!! __@RULENAME@__
! d1:Cx <=> _ (0:i 0:y) [ a: y2: | â: h ] (%^IC:0) ( %-: ) %<:0 Cx: ;
!    where Cx in ( c k m n p s t w y ) ;

define ReduplRule [ [ d1 | d2 ] -> c || _ [ \%< ]+ %< c ,, [ d1 | d2 ] -> h || _ [ \%< ]+ %< h ,, [ d1 | d2 ] -> h || _ [ \%< ]+ %< h ,, [ d1 | d2 ] -> k || _ [ \%< ]+ %< k ,, [ d1 | d2 ] -> m || _ [ \%< ]+ %< m ,, [ d1 | d2 ] -> n || _ [ \%< ]+ %< n ,, [ d1 | d2 ] -> p || _ [ \%< ]+ %< p ,, [ d1 | d2 ] -> s || _ [ \%< ]+ %< s ,, [ d1 | d2 ] -> t || _ [ \%< ]+ %< t ,, [ d1 | d2 ] -> w || _ [ \%< ]+ %< w ,, [ d1 | d2 ] -> y || _ [ \%< ]+ %< y ] .o. [ [ y2 | y3 ] -> y || [ d1 | d2 ] ?* _ ] .o. [ [ d1 | d2 ] -> 0 ] .o. [ [ y2 | y3 ] -> 0 ] ;

!!€ d1ay2-<nipâw
!!€ na0-0nipâw

!!€ d1âh-<nipâw
!!€ nâh-0nipâw

!!€ d2ay3-d1âh-<nipâw
!!€ na0-nâh-0nipâw

!!€ d2ay3-d1âh-<ayâw
!!€ 0ay-0âh-0ayâw

!!€ d1âh-<ayâw
!!€ 0âh-0ayâw

!!€ d1ay2-<ayâw
!!€ 0ay-0ayâw

!! INITIAL CHANGE
! a ~ ê
! i ~ ê
! o ~ ê ! W-A corpus evidence
! â ~ iyâ
! ê ~ iyê
! î ~ â (iyî)
! ô ~ iyô

! General Template
! v1:v2 <=> .#. (C) _ :* %^IC:0 ;

define ICaRule [ a -> ê , "^IC" -> 0 || .#. (Consonant) _ ?* "^IC" ] ;

define ICiRule [ i -> ê , "^IC" -> 0 || .#. (Consonant) _ ?* "^IC" ] ;

define ICoRule [ o -> [ w ê ] , "^IC" -> 0 || .#. (Consonant) _ ?* "^IC" ] ;

define ICVVRule [ [..] -> [ i y ] , "^IC" -> 0 || .#. (Consonant) _ [ â | ê | ô ] ?* "^IC" ] ;

define ICiiRule [ î -> [ â | [ i y î ]] , "^IC" -> 0 || .#. (Consonant) _ ?* "^IC" ] ;

define ICRule [ a -> ê || .#. (Consonant) _ ?* "^IC" ,, i -> ê || .#. (Consonant) _ ?* "^IC" ,, o -> ê ,, "^IC" -> 0 || .#. w _ ?* "^IC" ,,o -> [ w ê ] , "^IC" -> 0 || .#. (Consonant - w) _ ?* "^IC"  ,, [..] -> [ i y ] , "^IC" -> 0 || .#. (Consonant) _ [ â | ê | ô ] ?* "^IC" ,, î -> [ â | [ i y î ]] , "^IC" -> 0 || .#. (Consonant) _ ?* "^IC" ] ;

!!€ nipât^IC
!!€ nêpât0

!!€ miyo-nipât^IC
!!€ mêyo-nipât0

!!€ itwêt^IC
!!€ êtwêt0

!!€ apit^IC
!!€ êpit0

!!€ wayawit^IC
!!€ wêyawit0

!!€ îkatêhtêt^IC
!!€ âkatêhtêt0

!!€ nîmit^IC
!!€ nâmit0

!!€ 0ohcît^IC
!!€ wêhcît0

!!€ m0ostohtêt^IC
!!€ mwêstohtêt0

! o ~ wê

!!€ 0oyôyot^IC
!!€ wêyôyot0

!!€ k0ocît^IC
!!€ kwêcît0

! î ~ (â) iyî
! ê ~ iyê
! â ~ iyâ
! ô ~ iyô

!!€ îkatêhât^IC
!!€ âkatêhât0

!!€ 00îkatêhât^IC
!!€ iyîkatêhât0

!!€ 00êskêt^IC
!!€ iyêskêt0

!!€ 00âcimot^IC
!!€ iyâcimot0

!!€ 00ôhkomit^IC
!!€ iyôhkomit0

define w2oNDRule [ w3 %< -> 0 || .#. _ [ o | ô ] ,, w3 %< -> o || .#. _ Consonant ] .o. [ w3 -> w ] ;

! "i20NDRule"
! i:0 <=> .#. w3:o _ %<:0 ;

!!€ w3<spiton
!!€ o0spiton

!!€ ni<spiton
!!€ ni0spiton

!!€ ki<spiton
!!€ ki0spiton

!!€ w3<îpit
!!€ w0îpit

!!€ w3<ahkwan
!!€ w0ahkwan

! n3:n

! n3<o -> nô
! n<i<tanis
! ni<tanis

! [nk]i<V[^o] -> [nk]0<V
! [nk]i<o -> [nk]0<ô

define i2VPossNDRule  [ [ i4 %< o ] -> %< ô || .#. [ n | k | m ] _ ,, i4 -> i || .#. [ n | k | m ] _ %< Consonant ] .o. [ i4 -> 0 ] ;

!!€ ni4<ohkom
!!€ n00ôhkom

!!€ ni4<ohkom>i2nân>ak
!!€ n00ôhkom0inân0ak

!!€ ki4<ohkom
!!€ k00ôhkom

!!€ w3<ohkom>a
!!€ 00ohkom0a

define o2ooPossNounRule [ o -> ô || .#. [ [ n i ] | [ k i ] | o ] [ t | t2 ] %< _ ] ;

!!€ nit2<ospwâkan
!!€ nit0ôspwâkan

!!€ kit2<ospwâkan
!!€ kit0ôspwâkan

!!€ ot2<ospwâkan
!!€ ot0ôspwâkan

!! Composing the rules together

define deep2surfRule [ i2 -> i ,, ii2 -> î ,, n2 -> n ,, n3 -> n ,, t3 -> t ,, w2 -> w ,, y4 -> y ] ;

define rmTriggerRule [ [ "^DIM" | "^COM" | "^IC" ] -> 0 ] ;

read regex [ VGi2VVRule .o. iiRule .o. Cwi2CoôRule .o. wFinalRule .o. etanRule .o. ee2aaVAIRule .o. a2eeVTIRule .o. n2hRule .o. n20VIIRule .o. t2cVTIRule .o. t2sVTA4Rule .o. t3kostewRule .o. ReduplRule .o. t2epenthesisRule .o. h2epenthesisRule .o. w2oNDRule .o. i2VPossNDRule .o. o2ooPossNounRule .o. DimRule .o. deep2surfRule .o. rmTriggerRule ] ;

!!!!! END !!!!!
