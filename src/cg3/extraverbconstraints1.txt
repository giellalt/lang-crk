##ACTor and goal rules for 3 and 3’ animate nouns
##need to extend the interleaving, so all 1s, then all 2s, etc. possibly also interleave with TI and AI (thought: relationships with TAs more core: if a noun close to both a TA and an AI (conj), AI maybe more likely to be a relative clause)
## all *(-)1 forms are unchanged from original functional constraints, can remain if/when more automatic heuristics can be developed
## ind before cnj, ê- before kâ-

MAP:TAGOAL3R @<GOAL TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(-1 TA + 3SgO) ;
MAP:TAGOAL3L @GOAL> TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(1 TA + 3SgO) ;
MAP:TAGOAL3R @<GOAL TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(NOT -1 PUNCT OR CLB)(-2 TA + 3SgO) ;
MAP:TAGOAL3L @GOAL> TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(NOT 1 PUNCT OR CLB)(2 TA + 3SgO) ;
MAP:TAGOAL3R @<GOAL TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(*-1 TA + 3SgO BARRIER V OR CLB) ;
MAP:TAGOAL3L @GOAL> TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(*1 TA + 3SgO BARRIER V OR CLB) ;

MAP:TAGOAL3R @<GOAL TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(-1 TA + 3PlO) ;
MAP:TAGOAL3L @GOAL> TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(1 TA + 3PlO) ;
MAP:TAGOAL3R @<GOAL TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(NOT -1 PUNCT OR CLB)(-2 TA + 3PlO) ;
MAP:TAGOAL3L @GOAL> TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(NOT 1 PUNCT OR CLB)(2 TA + 3PlO) ;
MAP:TAGOAL3R @<GOAL TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(*-1 TA + 3PlO BARRIER V OR CLB) ;
MAP:TAGOAL3L @GOAL> TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(*1 TA + 3PlO BARRIER V OR CLB) ;

MAP:TAGOALObvR @<GOAL TARGET N + Obv IF (NOT 0 Loc)(-1 TA + 4Sg/PlO) ;
MAP:TAGOALObvL @GOAL> TARGET N + Obv IF (NOT 0 Loc)(1 TA + 4Sg/PlO) ;
MAP:TAGOALObvR @<GOAL TARGET N + Obv IF (NOT 0 Loc)(NOT -1 PUNCT OR CLB)(-2 TA + 4Sg/PlO) ;
MAP:TAGOALObvL @GOAL> TARGET N + Obv IF (NOT 0 Loc)(NOT 1 PUNCT OR CLB)(2 TA + 4Sg/PlO) ;
MAP:TAGOALObvR @<GOAL TARGET N + Obv IF (NOT 0 Loc)(*-1 TA + 4Sg/PlO BARRIER V OR CLB) ;
MAP:TAGOALObvL @GOAL> TARGET N + Obv IF (NOT 0 Loc)(*1 TA + 4Sg/PlO BARRIER V OR CLB) ;

MAP:TAACTorR @<ACTOR TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(-1 TA + 3Sg) ;
MAP:TAACTorL @ACTOR> TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(1 TA + 3Sg) ;
MAP:TAACTorR @<ACTOR TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(NOT -1 PUNCT OR CLB)(-2 TA + 3Sg) ;
MAP:TAACTorL @ACTOR> TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(NOT 1 PUNCT OR CLB)(2 TA + 3Sg) ;
MAP:TAACTorR @<ACTOR TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(*-1 TA + 3Sg BARRIER V OR CLB) ;
MAP:TAACTorL @ACTOR> TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(*1 TA + 3Sg BARRIER V OR CLB) ;

MAP:TAACTorR @<ACTOR TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(-1 TA + 3Pl) ;
MAP:TAACTorL @ACTOR> TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(1 TA + 3Pl) ;
MAP:TAACTorR @<ACTOR TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(NOT -1 PUNCT OR CLB)(-2 TA + 3Pl) ;
MAP:TAACTorL @ACTOR> TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(NOT -1 PUNCT OR CLB)(2 TA + 3Pl ) ;
MAP:TAACTorR @<ACTOR TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(*-1 TA + 3Pl BARRIER V OR CLB) ;
MAP:TAACTorL @ACTOR> TARGET N + AN + Pl IF (NOT 0 Loc)(NOT 0 Obv)(*1 TA + 3Pl BARRIER V OR CLB) ;

MAP:TAACTObvR @<ACTOR TARGET N + Obv IF (NOT 0 Loc)(-1C TA + 4Sg/Pl) ;
MAP:TAACTObvL @ACTOR> TARGET N + Obv IF (NOT 0 Loc)(1C TA + 4Sg/Pl) ;
MAP:TAACTObvR @<ACTOR TARGET N + Obv IF (NOT 0 Loc)(NOT -1 PUNCT OR CLB)(-2C TA + 4Sg/Pl) ;
MAP:TAACTObvL @ACTOR> TARGET N + Obv IF (NOT 0 Loc)(NOT 1 PUNCT OR CLB)(2C TA + 4Sg/Pl) ;
MAP:TAACTObvR @<ACTOR TARGET N + Obv IF (NOT 0 Loc)(*-1C TA + 4Sg/Pl BARRIER V OR CLB) ;
MAP:TAACTObvL @ACTOR> TARGET N + Obv IF (NOT 0 Loc)(*1C TA + 4Sg/Pl BARRIER V OR CLB) ;

##MAP:AITIACTorR @<ACTOR TARGET N + AN IF (*-1 (AI 3) OR (TI 3) BARRIER CLB OR CLB) ;

##INTERROGATIVE
#MAP:INTR @<ACTOR TARGET Interr IF (*-1 AI OR TI + 3Pl OR 3Sg BARRIER CLB) ;
#MAP:INTR @ACTOR> TARGET Interr IF (*1 AI OR TI + 3Pl OR 3Sg BARRIER CLB) ;

#TI and AI actors nouns
MAP:AITIACTSgR @<ACTOR TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(-1 AI + 3Sg OR TI + 3Sg) ;
MAP:AITIACTSgL @ACTOR> TARGET N + AN + Sg IF  (NOT 0 Loc)(NOT 0 Obv)(1 AI + 3Sg OR TI + 3Sg) ;
MAP:AITIACTSgR @<ACTOR TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(NOT -1 PUNCT OR CLB)(-2 AI + 3Sg OR TI + 3Sg) ;
MAP:AITIACTSgL @ACTOR> TARGET N + AN + Sg IF  (NOT 0 Loc)(NOT 0 Obv)(NOT 1 PUNCT OR CLB)(2 AI + 3Sg OR TI + 3Sg) ;
MAP:AITIACTSgR @<ACTOR TARGET N + AN + Sg IF (NOT 0 Loc)(NOT 0 Obv)(*-1 AI + 3Sg OR TI + 3Sg BARRIER V OR CLB) ;
MAP:AITIACTSgL @ACTOR> TARGET N + AN + Sg IF  (NOT 0 Loc)(NOT 0 Obv)(*1 AI + 3Sg OR TI + 3Sg BARRIER V OR CLB) ;

MAP:AITIACTPlR @<ACTOR TARGET N + AN + Pl IF (NOT 0 Loc)(-1 AI + 3Pl OR TI + 3Pl) ;
MAP:AITIACTPlL @ACTOR> TARGET N + AN + Pl IF  (NOT 0 Loc)(1 AI + 3Pl OR TI + 3Pl) ;
MAP:AITIACTPlR @<ACTOR TARGET N + AN + Pl IF (NOT 0 Loc)(NOT -1 PUNCT OR CLB)(-2 AI + 3Pl OR TI + 3Pl) ;
MAP:AITIACTPlL @ACTOR> TARGET N + AN + Pl IF  (NOT 0 Loc)(NOT 1 PUNCT OR CLB)(2 AI + 3Pl OR TI + 3Pl) ;
MAP:AITIACTPlR @<ACTOR TARGET N + AN + Pl IF (NOT 0 Loc)(*-1 AI + 3Pl OR TI + 3Pl BARRIER V OR CLB) ;
MAP:AITIACTPlL @ACTOR> TARGET N + AN + Pl IF  (NOT 0 Loc)(*1 AI + 3Pl OR TI + 3Pl BARRIER V OR CLB) ;

MAP:AITIACTorR @<ACTOR TARGET N + Obv IF (NOT 0 Loc)(-1C AI + 4Sg/Pl OR TI + 4Sg/Pl) ;
MAP:AITIACTorL @ACTOR> TARGET N + Obv IF (NOT 0 Loc)(1C AI + 4Sg/Pl OR TI + 4Sg/Pl) ;
MAP:AITIACTorR @<ACTOR TARGET N + Obv IF (NOT 0 Loc)(NOT -1 PUNCT OR CLB)(-2C AI + 4Sg/Pl OR TI + 4Sg/Pl) ;
MAP:AITIACTorL @ACTOR> TARGET N + Obv IF (NOT 0 Loc)(NOT 1 PUNCT OR CLB)(2C AI + 4Sg/Pl OR TI + 4Sg/Pl) ;
MAP:AITIACTorR @<ACTOR TARGET N + Obv IF (NOT 0 Loc)(*-1C AI + 4Sg/Pl OR TI + 4Sg/Pl BARRIER V OR CLB) ;
MAP:AITIACTorL @ACTOR> TARGET N + Obv IF (NOT 0 Loc)(*1C AI + 4Sg/Pl OR TI + 4Sg/Pl BARRIER V OR CLB) ;
