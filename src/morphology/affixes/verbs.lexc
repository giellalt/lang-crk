! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@hum.uit.no

! ========================================================================== !
!!                           !!! Plains Cree verb morphology                  
! ========================================================================== !




!! The Plains Cree verbs are divided in four groups:

!! # IA: Intransitive animate
!! # II: Intransitive inanimate
!! # TA: Transitive animate
!! # TI: Transitive inanimate



!! !!!Prefixes


LEXICON VerbPrefixes  !!= @CODE@ divides the lexicon into four modes: independent, conjunctive, imperative and future conditional

@U.mood.indep@ INDEPENDENT ;		 !!= * @CODE@
@U.mood.cnj@   CONJUNCTIV ;		     !!= * @CODE@ 
               IMPERATIV ;		     !!= * @CODE@
               FUTURE_CONDITIONAL ;  !!= * @CODE@


LEXICON INDEPENDENT !!= @CODE@ gives flags and prefixes for personprefix
< 0:n 0:i "@U.perspref.NI@"  0:"t2" > IND_TENSE ; !
< 0:k 0:i "@U.perspref.KI@"  0:"t2" > IND_TENSE ; !
<         "@U.perspref.NULL@"       > IND_TENSE ; !


LEXICON IND_TENSE !!= @CODE@ gives flags and prefixes for tense 
<                   "@U.tense.Prs@"     > VERBLIST ; !
< 0:k 0:î 0:%^EGLOT "@U.tense.Prt@"     > VERBLIST ; ! removed hyph
< 0:k 0:î 0:%-      "@U.tense.Prt@"     > VERBLIST ; !
< 0:k 0:a 0:%^EGLOT "@U.tense.FutDef@"  > VERBLIST ; !
< 0:k 0:a 0:%-      "@U.tense.FutDef@"  > VERBLIST ; !
< 0:w 0:î 0:%^EGLOT "@U.tense.FutInt@"  > VERBLIST ; !
< 0:w 0:î 0:%-      "@U.tense.FutInt@"  > VERBLIST ; !


LEXICON FUTURE_CONDITIONAL !!= @CODE@ gives flags for future conditional (no prefix)
@U.mood.FutCon@ VERBLIST ;

LEXICON CONJUNCTIV !!= @CODE@ gives flag for conjunctive and prefix ê-
<  0:ê 0:%-       > CNJ_TENSE ; !
<  0:ê 0:%^EGLOT   > CNJ_TENSE ; !


LEXICON CNJ_TENSE   !!= @CODE@ gives prefixes and flags for tense in conjunctive
<        			"@U.tense.Prs@"    > VERBLIST ; !Present
< 0:k 0:î 0:%-  	"@U.tense.Prt@"    > VERBLIST ;  ! Preterite, 
< 0:k 0:î 0:%^EGLOT "@U.tense.Prt@"    > VERBLIST ;  ! Preterite,
< 0:w 0:î 0:%-  	"@U.tense.FutInt@" > VERBLIST ; ! Future Intentional
< 0:w 0:î 0:%^EGLOT "@U.tense.FutInt@" > VERBLIST ; ! Future Intentional


LEXICON IMPERATIV   !!= @CODE@ gives flag for imperative (no prefixes)
@U.mood.imp@  VERBLIST ;




!! Now, lexc directs us to the ../stems/nouns.lexc file,
!! where we find all the nominal stems. The suffixes are then
!! found at the end of this file.


! ===============================================================
! ===============================================================
! ===============================================================
! ===============================================================
! ===============================================================



!! !!!Suffixes




! Auxiliary lexica for the verb dump

LEXICON IACONJ_n 
IACONJ ;
LEXICON IACONJ_v 
IACONJ ;
LEXICON IICONJ_n 
IICONJ ;
LEXICON IICONJ_v 
IICONJ ;

LEXICON TACONJ_3 
TACONJ_1 ;
LEXICON TACONJ_4 
TACONJ_1 ;
LEXICON TACONJ_5 
TACONJ_1 ;
LEXICON TICONJ_1 
TICONJ ;
LEXICON TICONJ_2 
TICONJ ;
LEXICON TICONJ_3 
TICONJ ;


!! !!! Intransitive animate (IA)

LEXICON IACONJ !!= @CODE@ splits in 4 moods
< "+V":0 "+IA":0   "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@"   >     # ; !Baseform
+V+IA: IACONJ-CONT ;
 
 
 
LEXICON IACONJw !!= @CODE@ splits in 4 moods, for verbs with final -w
< "+V":w "+IA":0 "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@" >     # ; !Baseform
+V+IA: IACONJ-CONT ;

LEXICON IACONJn !!= @CODE@ splits in 4 moods, for verbs with final -n
< "+V":0 "+IA":0   "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@"   >     # ; !Baseform
+V+IA: IACONJ-CONTn ;


LEXICON IACONJ-CONT
< "+Ind":0  "@U.mood.indep@" >  IA_IND ; !
< "+Cnj":0  "@U.mood.cnj@" > IA_CNJ ; !
< "+Imp":%>    "@U.mood.imp@"  >  IA_IMP ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > IA_FUT_CON ;

LEXICON IACONJ-CONTn
< "+Ind":0  "@U.mood.indep@" >  IA_INDn ; !
< "+Cnj":0  "@U.mood.cnj@" > IA_CNJn ; !
< "+Imp":%>     "@U.mood.imp@"  >  IA_IMPn ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > IA_FUT_CON ;


LEXICON IA_IND !!= @CODE@ First mode, indicative
< "@U.tense.Prs@"    "+Prs":%>          > IA_IND_PRS ; !
< "@U.tense.Prt@"    "+Prt":%>          > IA_IND_PRS ; !
< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > IA_IND_PRS ; !
< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > IA_IND_PRS ; !

LEXICON IA_INDn !!= @CODE@ First mode, indicative
< "@U.tense.Prs@"    "+Prs":%>          > IA_IND_PRSn ; !
< "@U.tense.Prt@"    "+Prt":%>          > IA_IND_PRSn ; !
< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > IA_IND_PRSn ; !
< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > IA_IND_PRSn ; !



LEXICON IA_IND_PRS !!= @CODE@ gives person suffixes
< 0:"^EA"  "+1Sg":0 "@U.perspref.NI@"   0:n                 > # ; !
< 0:"^EA"  "+2Sg":0 "@U.perspref.KI@"   0:n                 > # ; !
<          "+3Sg":0 "@U.perspref.NULL@" 0:w                 > # ; !
<          "+4Sg":0 "@U.perspref.NULL@" 0:y 0:i 0:w 0:a     > # ; !
< 0:"^EA"  "+1Pl":0 "@U.perspref.NI@"   0:n 0:â 0:n         > # ; !
< 0:"^EA" "+12Pl":0 "@U.perspref.KI@"   0:n 0:a 0:w         > # ; !
< 0:"^EA" "+12Pl":0 "@U.perspref.KI@"   0:n 0:â 0:n 0:a 0:w         > # ; !
< 0:"^EA"  "+2Pl":0 "@U.perspref.KI@"   0:n 0:â 0:w 0:â 0:w > # ; !
<          "+3Pl":0 "@U.perspref.NULL@" 0:w 0:a 0:k         > # ; !
<          "+4Pl":0 "@U.perspref.NULL@" 0:y 0:i 0:w 0:a     > # ; !


LEXICON IA_IND_PRSn !!= @CODE@ gives person suffixes
< 0:"^EA"  "+1Sg":0 "@U.perspref.NI@"   0:i 0:n                 > # ; !
< 0:"^EA"  "+2Sg":0 "@U.perspref.KI@"   0:i 0:n                 > # ; !
<          "+3Sg":0 "@U.perspref.NULL@"                    > # ; !
<          "+4Sg":0 "@U.perspref.NULL@" 0:i 0:y 0:i 0:w 0:a     > # ; !
< 0:"^EA"  "+1Pl":0 "@U.perspref.NI@"   0:i 0:n 0:â 0:n         > # ; !
< 0:"^EA" "+12Pl":0 "@U.perspref.KI@"   0:i 0:n 0:a 0:w         > # ; !
< 0:"^EA" "+12Pl":0 "@U.perspref.KI@"   0:i 0:n 0:â 0:n 0:a 0:w         > # ; !
< 0:"^EA"  "+2Pl":0 "@U.perspref.KI@"   0:i 0:n 0:â 0:w 0:â 0:w > # ; !
<          "+3Pl":0 "@U.perspref.NULL@"  0:w 0:a 0:k         > # ; !
<          "+4Pl":0 "@U.perspref.NULL@" 0:i 0:y 0:i 0:w 0:a     > # ; !



!<  "+2Sg":0 "@U.verb.indFutInt2sg@"  0:n                 > # ; !
!<  "+3Sg":0 "@U.verb.indFutInt3sg@"  0:w                 > # ; !
!<  "+3oSg":0 "@U.verb.indFutInt3osg@" 0:y 0:i 0:w 0:a    > # ; !
!<  "+1Pl":0 "@U.verb.indFutInt1pl@"  0:n 0:â 0:n         > # ;   ! exclusive Pl
!< "+12Pl":0 "@U.verb.indFutInt12pl@" 0:n 0:a 0:w         > # ; ! inclusive Pl
!<  "+2Pl":0 "@U.verb.indFutInt2pl@"  0:n 0:â 0:w 0:â 0:w > # ;           !
!<  "+3Pl":0 "@U.verb.indFutInt3pl@"  0:w 0:a 0:k         > # ;   !
!< "+3oPl":0 "@U.verb.indFutInt3opl@" 0:y 0:i 0:w 0:a     > # ;   !

LEXICON IA_FUT_CON
  +1Sg:%>yâni  # ; 
  +2Sg:%>yani  # ; 
  +3Sg:%>ci    # ; 
  +4Sg:%>yici  # ; 
  +1Pl:%>yâhki # ; ! exclusive Pl
 +12Pl:%>yahko # ; ! inclusive Pl
  +2Pl:%>yêko  # ; 
  +3Pl:%>twâwi # ; 
  +4Pl:%>yici  # ; 


LEXICON IA_CNJ !!= @CODE@ Third mode, conjunctive
< "+Prs":0          "@U.tense.Prs@"    > IA_CNJ_SUF ; !
< "+Prt":0          "@U.tense.Prt@"    > IA_CNJ_SUF ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > IA_CNJ_SUF ; !

LEXICON IA_CNJn !!= @CODE@ Third mode, conjunctive
< "+Prs":0          "@U.tense.Prs@"    > IA_CNJ_SUFn ; !
< "+Prt":0          "@U.tense.Prt@"    > IA_CNJ_SUFn ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > IA_CNJ_SUFn ; !


LEXICON IA_CNJ_SUF
     +1Sg:%>yân #;
     +2Sg:%>yan	#;
     +3Sg:%>t	#;
    +4Sg:%>yit #;
     +1Pl:%>yâhk #;
    +12Pl:%>yahk #;
     +2Pl:%>yêk #;  ! NOTE: corrected according to dt, earlier we said %>nyêk
     +3Pl:%>cik #;
    +4Pl:%>yit #;


LEXICON IA_CNJ_SUFn
     +1Sg:%>iyân #;
     +2Sg:%>iyan	#;
     +3Sg:%>hk	#;
    +4Sg:%>iyit #;
     +1Pl:%>iyâhk #;
    +12Pl:%>iyahk #;
     +2Pl:%>iyêk #;  ! NOTE: corrected according to dt, earlier we said %>nyêk
     +3Pl:%>hkik #;
    +4Pl:%>iyit #;

LEXICON IA_IMP  !!= @CODE@ Fourth mode, imperative
+Imm+2Sg:0   # ; !
+Imm+12Pl:%>tân	  # ; !
+Imm+2Pl:%>k	 # ; !
+Del+2Sg:%>hkan   # ; !
+Del+12Pl:%>hkahk   # ; !
+Del+2Pl:%>hkêk   # ; !

LEXICON IA_IMPn  !!= @CODE@ Fourth mode, imperative
+Imm+2Sg:i   # ; !
+Imm+12Pl:%>îtân	  # ; !
+Imm+2Pl:%>ik	 # ; !
+Del+2Sg:%>îhkan   # ; !
+Del+12Pl:%>îhkahk   # ; !
+Del+2Pl:%>îhkêk   # ; !



LEXICON IA_IMP_LONG_E
< "+Imp":0 "@U.perspref.NULL@" > imp-long-E ;!

LEXICON imp-long-E
+Imm+2Sg:ê   # ;
+Imm+2Pl:%>êk	 # ;
+Imm+12Pl:%>êtân	  # ;
+Del+2Sg:%>êhkan   # ;
+Del+2Pl:%>êhkêk   # ;
+Del+12Pl:%>êhkahk   # ;


!! !!! Intransitive inanimate (II)
!      ===========================
!      ===========================


LEXICON IICONJ  !!= @CODE@ adds the flag for no personprefixes
< "+V":0 "+II":0 "@U.perspref.NULL@" > IICONJFORMS ;

LEXICON IICONJ-SG  !!= @CODE@ adds the flag for no personprefixes, only Sg forms
< "+V":0 "+II":0 "@U.perspref.NULL@" > IICONJFORMS-SG ;


LEXICON IICONJFORMS !!= @CODE@ adds a baseform = Prs+3Sg
< "@U.tense.Prs@" "@U.mood.indep@" >  # ; !baseform
 IICONJ-CONT ; 

LEXICON IICONJFORMS-SG !!= @CODE@ adds a baseform = Prs+3Sg
< "@U.tense.Prs@" "@U.mood.indep@" >  # ; !baseform
 IICONJ-CONT-SG ; 


LEXICON IICONJw  !!= @CODE@  w final. Adds a baseform = Prs+3Sg and more diacr.flags. Be aware that two of the flags are identical, and couse overgeneration for hfst. See bz. 1859.
< "+V":w "+II":0  "@U.tense.Prs@" "@U.mood.indep@" "@U.perspref.NULL@" > # ; !baseform
< "+V":0 "+II":0  "@U.perspref.NULL@" > IICONJ-CONTw ;

LEXICON IICONJw-SG  !!= @CODE@  w final, only Sg forms Adds a baseform = Prs+3Sg and more diacr.flags. Be aware that two of the flags are identical, and couse overgeneration for hfst. See bz. 1859.
< "+V":w "+II":0  "@U.tense.Prs@" "@U.mood.indep@" "@U.perspref.NULL@" > # ; !baseform
< "+V":0 "+II":0  "@U.perspref.NULL@" > IICONJ-CONTw-SG ;


LEXICON IICONJ-CONTw !!= @CODE@ w final. Splits according to mood
< "+Ind":0  "@U.mood.indep@" >  II_INDw ; !
< "+Cnj":0  "@U.mood.cnj@" > II_CNJw ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > II_IND_PERSw-SG ;!
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > II_IND_PERSw-PL ;!

LEXICON IICONJ-CONTw-SG !!= @CODE@ w final. Splits according to mood
< "+Ind":0  "@U.mood.indep@" >  II_INDw-SG ; !
< "+Cnj":0  "@U.mood.cnj@" > II_CNJw-SG ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > II_IND_PERSw-SG ;!


LEXICON IICONJ-CONT !!= @CODE@ splits according to mood
< "+Ind":0  "@U.mood.indep@" >  II_IND ; !
< "+Cnj":0  "@U.mood.cnj@" > II_CNJ ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > II_IND_PERS-SG ;!
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > II_IND_PERS-PL ;!

LEXICON IICONJ-CONT-SG !!= @CODE@ splits according to mood
< "+Ind":0  "@U.mood.indep@" >  II_IND-SG ; !
< "+Cnj":0  "@U.mood.cnj@" > II_CNJ-SG ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > II_IND_PERS-SG ;!


LEXICON II_INDw !!= @CODE@ indicative for w final
< "@U.tense.Prs@"    "+Prs":%>          > II_IND_PERSw-SG ; !
< "@U.tense.Prs@"    "+Prs":%>          > II_IND_PERSw-PL ; !
< "@U.tense.Prt@"    "+Prt":%>          > II_IND_PERSw-SG ; !
< "@U.tense.Prt@"    "+Prt":%>          > II_IND_PERSw-PL ; !
!< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > II_IND_PERS ; !
!< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > II_IND_PERS ; !


LEXICON II_INDw-SG !!= @CODE@ indicative for w final
< "@U.tense.Prs@"    "+Prs":%>          > II_IND_PERSw-SG ; !
< "@U.tense.Prt@"    "+Prt":%>          > II_IND_PERSw-SG ; !
!< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > II_IND_PERS-SG ; !
!< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > II_IND_PERS-SG ; !


LEXICON II_CNJw !!= @CODE@ conjunctive for w final
< "+Prs":0          "@U.tense.Prs@"    > II_CNJ_PERSw-SG ; !
< "+Prs":0          "@U.tense.Prs@"    > II_CNJ_PERSw-PL ; !
< "+Prt":0          "@U.tense.Prt@"    > II_CNJ_PERSw-SG ; !
< "+Prt":0          "@U.tense.Prt@"    > II_CNJ_PERSw-PL ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > II_CNJ_PERSw-SG ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > II_CNJ_PERSw-PL ; !

LEXICON II_CNJw-SG !!= @CODE@ conjunctive for w final
< "+Prs":0          "@U.tense.Prs@"    > II_CNJ_PERSw-SG ; !
< "+Prt":0          "@U.tense.Prt@"    > II_CNJ_PERSw-SG ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > II_CNJ_PERSw-SG ; !



LEXICON II_IND !!= @CODE@ indicative
< "@U.tense.Prs@"    "+Prs":%>          > II_IND_PERS-SG ; !
< "@U.tense.Prs@"    "+Prs":%>          > II_IND_PERS-PL ; !
< "@U.tense.Prt@"    "+Prt":%>          > II_IND_PERS-SG ; !
< "@U.tense.Prt@"    "+Prt":%>          > II_IND_PERS-PL ; !
!< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > II_IND_PERS-SG ; !
!< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > II_IND_PERS-PL ; !
!< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > II_IND_PERS-SG ; !
!< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > II_IND_PERS-PL ; !

LEXICON II_IND-SG !!= @CODE@ indicative
< "@U.tense.Prs@"    "+Prs":%>          > II_IND_PERS-SG ; !
< "@U.tense.Prt@"    "+Prt":%>          > II_IND_PERS-SG ; !
!< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > II_IND_PERS-SG ; !
!< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > II_IND_PERS-SG ; !


LEXICON II_CNJ !!= @CODE@ conjunctive
< "+Prs":0          "@U.tense.Prs@"    > II_CNJ_PERS-SG ; !
< "+Prs":0          "@U.tense.Prs@"    > II_CNJ_PERS-PL ; !
< "+Prt":0          "@U.tense.Prt@"    > II_CNJ_PERS-SG ; !
< "+Prt":0          "@U.tense.Prt@"    > II_CNJ_PERS-PL ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > II_CNJ_PERS-SG ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > II_CNJ_PERS-PL ; !

LEXICON II_CNJ-SG !!= @CODE@ conjunctive
< "+Prs":0          "@U.tense.Prs@"    > II_CNJ_PERS-SG ; !
< "+Prt":0          "@U.tense.Prt@"    > II_CNJ_PERS-SG ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > II_CNJ_PERS-SG ; !


 
LEXICON II_IND_PERSw-SG   !!= @CODE@ w final 
+3Sg:%>w # ;
+4Sg:%>yiw # ;

LEXICON II_IND_PERSw-PL   !!= @CODE@ w final 
+3Pl:%>wa # ;
+4Pl:%>yiwa # ;

LEXICON II_IND_PERS-SG   !!= @CODE@ -n final 
+3Sg: # ;
+4Sg:%>iyiw # ;

LEXICON II_IND_PERS-PL   !!= @CODE@ -n final 
+3Pl:%>wa # ;
+4Pl:%>iyiwa # ;

LEXICON II_CNJ_PERSw-SG   !!= @CODE@ w final 
+3Sg:%>k # ;
+4Sg:%>yik # ;

LEXICON II_CNJ_PERSw-PL   !!= @CODE@ w final 
+3Pl:%>ki # ;
+4Pl:%>yiki # ;



LEXICON II_CNJ_PERS-SG   !!= @CODE@ -n final 
+3Sg:%>k # ;
+4Sg:%>iyik # ;

LEXICON II_CNJ_PERS-PL   !!= @CODE@ -n final 
+3Pl:%>ki # ;
+4Pl:%>iyiki # ;




!LEXICON II_IND_PERS 
!    :%>k # ; ! Both these entries now give wrong forms (ê-misponk pro ê-mispok etc.)
!+Fut:%>i # ; ! We need to decide whether to solve it in lexc (more lexica) or
!             ! in twolc (more abstract representation)


!! !!!Transitive animate (TA)
!     =======================
!     =======================

!! The VTA verbs split in different moods.
!! There are 4 stem classes, 1-4 (VTA-1 through VTA-4)

LEXICON TACONJ_1 !!= @CODE@ 
< "+V":0 "+TA":0   "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@"   >     # ; !Baseform
+V+TA: TACONJ-CONT ;


LEXICON TACONJ_2  !!= * @CODE@ splits in 4. The -aw shall be removed from some forms.
< "+V":a "+TA":w   "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@"   >     # ; !Baseform
+V+TA:aw TACONJ-CONT ;


LEXICON TACONJ-CONT
< "+Ind":0 "@U.mood.indep@" > TA_IND ; !
< "+Cnj":0 "@U.mood.cnj@" > TA_CNJ ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > TA_FUT ; !
< "+Imp":0 "@U.mood.imp@" > TA_IMP ; !



LEXICON TA_IND !!= @CODE@ gives prs
< "@U.tense.Prs@"    "+Prs":%> > TA_IND_PERSPREF ;!
< "@U.tense.Prt@"    "+Prt":%>          > TA_IND_PERSPREF ; !
< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > TA_IND_PERSPREF ; !Future definite 
< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > TA_IND_PERSPREF ; !Future intentional

LEXICON TA_IND_PERSPREF !!= @CODE@ gives tags for subject, flag for object, and directs to obj suffs
@U.perspref.NI@   VTA_NI_O ;  !
@U.perspref.KI@   VTA_KI_O ;  !
@U.perspref.NULL@   VTA_NULL_O ;  !




LEXICON VTA_NI_O  !!= @CODE@ gives the objects suffixes matching 1Sg subject or 1Sg object
+1Sg+3SgO:%>âw		  # ;
+1Sg+3PlO:%>âwak	  # ;
+3Sg+1SgO:%>ik        # ;
!+3Sg+1PlO:%>ik        # ;
+3Sg+1PlO:%>ikonân	  # ;
+3Pl+1SgO:%>ikwak	  # ;
+1Pl+3SgO:%>ânân	  # ;
+1Pl+3PlO:%>ânânak	  # ;
+3Pl+1PlO:%>ikonânak  # ;

LEXICON VTA_KI_O 	    !!= @CODE@ gives the objects suffixes matching 2Sg subject
+2Sg+3SgO:%>âw		  # ;
+2Sg+3PlO:%>âwak	  # ;
+3Sg+2SgO:%>ik		  # ;
+3Pl+2SgO:%>ikwak	  # ;
+12Pl+3SgO:%>ânaw	  # ;
+12Pl+3PlO:%>ânawak	  # ;
+3Sg+12PlO:%>ikonaw	  # ;
+3Sg+2PlO:%>ikowâw	  # ;
+3Pl+12PlO:%>ikonawak # ;
+2Pl+3SgO:%>âwâw	  # ;
+2Pl+3PlO:%>âwâwak	  # ;
+3Pl+2PlO:%>ikowâwak  # ;
				  
LEXICON VTA_NULL_O 	  
+3Sg+3SgO:%>êw		  # ; ! Oki 77
!+3Sg+3SgO:%>ik		  # ; ! Oki 77
!+3Sg+3SgO:%>kow	  # ; ! Oki 77
+3Sg+3PlO:%>êw		  # ; ! Oki 77
!+3Sg+3PlO:%>ikowak	  # ; ! Oki 77
!+3Sg+3PlO:%>ikak	  # ; ! Oki 77
!+3Pl+3SgO:%>kow	  # ; ! Oki 77
+3Pl+3SgO:%>êwak	  # ; ! Oki 77

+4Sg+3SgO:%>êyiwa	  # ;
!+4Sg+3SgO:%>ikoyiwa  # ; !??
+4Sg+3PlO:%>êyiwa	  # ;
!+4Sg+3PlO:%>ikoyiwa  # ; !??
+4Sg+4PlO:%>ikoyiwa  # ; !??

!+3Pl+3PlO:%>ikowak	  # ; ??
+3Pl+3PlO:%>êwak	  # ;
+4Pl+3SgO:%>êyiwa	  # ;
+4Pl+3PlO:%>êyiwa	  # ;



LEXICON TA_CNJ !!= @CODE@ Third mode, conjunctive
< "+Prs":0          "@U.tense.Prs@"    > TA_CNJ_SUF ; !
< "+Prt":0          "@U.tense.Prt@"    > TA_CNJ_SUF ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > TA_CNJ_SUF ; !


LEXICON TA_CNJ_SUF !!= @CODE@ gives conj + obj tag and suf

+1Sg+3SgO:%>ak		   # ;
+1Sg+3PlO:%>akik	   # ;

+1Pl+3SgO:%>âyâhk	   # ;
+1Pl+3PlO:%>âyâhkik	   # ;

+12Pl+3SgO:%>âyahk	   # ;
+12Pl+3PlO:%>âyâhkok   # ;

+2Sg+3SgO:%>at		   # ;
+2Sg+3PlO:%>acik	   # ;
+2Pl+3SgO:%>âyêk	   # ;
+2Pl+3PlO:%>âyêkok	   # ;

+3Sg+4PlO:%>ikocik	   # ;
+3Sg+3SgO:%>ât		   # ;
+3Sg+3PlO:%>ât		   # ;
+3Sg+2SgO:%>isk		   # ;
+3Sg+2PlO:%>ikoyêk	   # ;
+3Sg+1SgO:%>it		   # ;
+3Sg+1PlO:%>ikoyâhk	   # ;
+3Sg+12PlO:%>ikoyahk   # ;

+3Pl+4PlO:%>ikocik	   # ;
+3Pl+3SgO:%>âcik	   # ;
+3Pl+3PlO:%>âcik	   # ;
+3Pl+2SgO:%>iskik	   # ;
+3Pl+2PlO:%>ikoyêkok   # ;
+3Pl+1SgO:%>icik	   # ;
+3Pl+1PlO:%>ikoyâhkik  # ;
+3Pl+12PlO:%>ikoyâhkok # ;

+4Sg+4SgO:%>koyit	   # ;
+4Sg+4PlO:%>ikoyit   # ;
+4Sg+3SgO:%>âyit	   # ;
+4Sg+3PlO:%>ikocik	   # ;

+4Pl+4SgO:%>koyit	   # ;
+4Pl+4PlO:%>ikoyit   # ;
+4Pl+3SgO:%>âyit	   # ;
!+4Pl+3SgO:%>ikot	   # ;
+4Pl+3PlO:%>ikocik	   # ;


LEXICON TA_FUT

+1Sg+3SgO:%>aki		   # ;
+1Sg+3PlO:%>akwâwi	   # ;
+1Pl+3SgO:%>âyâhki	   # ;
+1Pl+3PlO:%>âyâhkwâwi  # ;
+12Pl+3SgO:%>âyâhko	   # ;
+12Pl+3PlO:%>âyâhkwâwi # ;

+2Sg+3SgO:%>aci		   # ;
+2Sg+3PlO:%>atwâwi	   # ;
+2Pl+3SgO:%>âyêko	   # ;
+2Pl+3PlO:%>âyêkwâwi   # ;
					   
+3Sg+4SgO:%>âyici	   # ;
+3Sg+3SgO:%>âci		   # ;
+3Sg+3PlO:%>ikotwâwi   # ;
+3Sg+2SgO:%>iski	   # ;
+3Sg+2PlO:%>ikoyêko	   # ;
+3Sg+1SgO:%>ici		   # ;
+3Sg+1PlO:%>ikoyâhki   # ;
+3Sg+12PlO:%>ikoyahko  # ;
					   
+3Pl+3SgO:%>âtwâwi	   # ;
+3Pl+3PlO:%>âtwâwi	   # ;
!+3Pl+3PlO:%>ikotwâwi   # ; ??
					   
+4Sg+4PlO:%>ikoyici  # ;
+4Sg+3SgO:%>ikoci	   # ;
+4Sg+3PlO:%>âyici	   # ;
+4Pl+4PlO:%>ikoyici  # ;
+4Pl+3SgO:%>ikoci	   # ;
+4Pl+3PlO:%>âyici	   # ;



LEXICON TA_IMP
@U.perspref.NULL@  2Sg_Imp ;
@U.perspref.NULL@  2Pl_Imp ;
@U.perspref.NULL@ 12Pl_Imp ;

!@U.verb.imp2sg@  2Sg_Imp ;
!@U.verb.imp1pl@  2Pl_Imp ;
!@U.verb.imp2pl@ 12Pl_Imp ;

LEXICON 2Sg_Imp
+Imm+2Sg+3SgO: # ;
+Imm+2Sg+3PlO:%>ik # ;
+Del+2Sg+3SgO:%>âhkan # ;
+Del+2Sg+3PlO:%>âhkanik # ;

LEXICON 2Pl_Imp
+Imm+2Pl+3SgO:%>ihk # ;
+Imm+2Pl+3PlO:%>ihkok # ;
+Del+2Pl+3SgO:%>âhkêk # ;
+Del+2Pl+3PlO:%>âhkêkok # ;

LEXICON 12Pl_Imp
+Imm+12Pl+3SgO:%>âtân # ;
+Imm+12Pl+3PlO:%>âtânik # ;
+Del+12Pl+3SgO:%>âhkahk # ;
+Del+12Pl+3PlO:%>âhkahkok # ;







!! !! Transitive Inanimate (TI)
!     =========================
!     =========================


LEXICON TICONJa  !!= * @CODE@
< "+V":0 "+TI":0   "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@"   >     # ; !Baseform
+V+TI: TICONJ-CONTa ;

 
LEXICON TICONJ  !!= * @CODE@ adds baseform and directs to IACONJ-CONT
< "+V":0 "+TI":0   "@U.perspref.NULL@" "@U.tense.Prs@" "@U.mood.indep@"   >     # ; !Baseform
+V+TI: IACONJ-CONT ; 


LEXICON TICONJ-CONTa !!= * @CODE@
< "+Ind":0  "@U.mood.indep@" >  TI_IND ; !
< "+Cnj":0  "@U.mood.cnj@" > TI_CNJa ; !
<     "@D.tense@"  >  TI_IMP ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > TI_FUT_CON ;


LEXICON TICONJ-CONT !!= * @CODE@
< "+Ind":0  "@U.mood.indep@" >  TI_IND ; !
< "+Cnj":0  "@U.mood.cnj@" > TI_CNJ ; !
<     "@D.tense@"  >  TI_IMP ; !
< "+Fut":0 "+Cond":0 "@U.mood.FutCon@" > TI_FUT_CON ;


LEXICON TI_IND !!= @CODE@ First mode, indicative
< "@U.tense.Prs@"    "+Prs":%>          > TI_IND_PRS ; !
< "@U.tense.Prt@"    "+Prt":%>          > TI_IND_PRS ; !
< "@U.tense.FutDef@" "+Fut":0 "+Def":%> > TI_IND_PRS ; !
< "@U.tense.FutInt@" "+Fut":0 "+Int":%> > TI_IND_PRS ; !


LEXICON TI_IND_PRS !!= @CODE@ gives person suffixes
< 0:"^EA"  "+1Sg":0 "@U.perspref.NI@"   0:n                 > # ; !
< 0:"^EA"  "+2Sg":0 "@U.perspref.KI@"   0:n                 > # ; !
<          "+3Sg":0 "@U.perspref.NULL@" 0:m                 > # ; !
<          "+4Sg":0 "@U.perspref.NULL@" 0:m 0:i 0:y 0:i 0:w 0:a     > # ; !
< 0:"^EA"  "+1Pl":0 "@U.perspref.NI@"   0:n 0:â 0:n         > # ; !
< 0:"^EA" "+12Pl":0 "@U.perspref.KI@"   0:n 0:a 0:w         > # ; !
< 0:"^EA" "+12Pl":0 "@U.perspref.KI@"   0:n 0:â 0:n 0:a 0:w         > # ; !
< 0:"^EA"  "+2Pl":0 "@U.perspref.KI@"   0:n 0:â 0:w 0:â 0:w > # ; !
<          "+3Pl":0 "@U.perspref.NULL@" 0:m 0:w 0:a 0:k         > # ; !
<          "+4Pl":0 "@U.perspref.NULL@" 0:m 0:i 0:y 0:i 0:w 0:a     > # ; !


LEXICON TI_FUT_CON !!= * @CODE@
  +1Sg:%>yâni  # ; 
  +2Sg:%>yani  # ; 
  +3Sg:%>ci    # ; 
  +4Sg:%>yici  # ; 
  +1Pl:%>yâhki # ; ! exclusive Pl
 +12Pl:%>yahko # ; ! inclusive Pl
  +2Pl:%>yêko  # ; 
  +3Pl:%>twâwi # ; 
  +4Pl:%>yici  # ; 


LEXICON TI_CNJ !!= @CODE@ Third mode, conjunctive
< "+Prs":0          "@U.tense.Prs@"    > IA_CNJ_SUF ; !
< "+Prt":0          "@U.tense.Prt@"    > IA_CNJ_SUF ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > IA_CNJ_SUF ; !

LEXICON TI_CNJa !!= @CODE@ Third mode, conjunctive
< "+Prs":0          "@U.tense.Prs@"    > TI_CNJ_SUF ; !
< "+Prt":0          "@U.tense.Prt@"    > TI_CNJ_SUF ; !
< "+Fut":0 "+Int":0 "@U.tense.FutInt@" > TI_CNJ_SUF ; !


LEXICON TI_CNJ_SUF !!= * @CODE@
     +1Sg:%>amân #;
     +2Sg:%>aman	#;
     +3Sg:%>ahk	#;
     +4Sg:%>amiyit	#;
     +1Pl:%>amâhk #;
    +12Pl:%>amahk #;
     +2Pl:%>amêk #;  !
     +3Pl:%>ahkik #;
    +4Pl:%>amiyit #;

LEXICON TI_IMP  !!= @CODE@ Fourth mode, imperative
< "+Imp":0 "@U.mood.imp@" > TI_imp ; !


LEXICON TI_imp !!= * @CODE@
+Imm+2Sg:   # ; !
+Imm+12Pl:%>^EAtân	  # ; !
+Imm+2Pl:%>mok   # ; !
+Del+2Sg:%>môhkan   # ; !
+Del+12Pl:%>môhkahk	  # ; !
+Del+2Pl:%>môhkêk   # ; !

LEXICON TA_IMP_LONG_E !!= * @CODE@
< "+Imp":0 "@U.perspref.NULL@" > imp-long-E ;!

LEXICON TI_imp-long-E !!= * @CODE@
+Imm+2Sg:%>mohkan  # ; !
+Imm+12Pl:%>mohkahk	  # ; !
+Imm+2Pl:%>mohkek   # ; !



