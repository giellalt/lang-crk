
! ========================================================================== !
!!                           !!!Plains Cree noun morphology                           
! ========================================================================== !

!! !!The declinations for Animates

LEXICON ANniska !!= * @CODE@ for the irregular niska N+AN
< "+N":a "+AN":0 "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":0 "+AN":0         "@U.noun.abs@" >  OBVIATIVE ; !
< "+N":a "+AN":k "+Pl":0 "@U.noun.abs@" >  # ; ! why not niskwak ??
< "+N":0 "+AN":0         "@U.noun.abs@" >  LOC ; !
< "+N":i "+AN":n         "@U.noun.abs@" >  LOCahk ; !
+N+AN+Sg:i%>i2m ANSUFF_SG ;
+N+AN+Pl:i%>i2m ANSUFF_PL ;
+N+AN:i%>i2m ANSUFF_LOC ;
+N+AN+Der/Dim+N+AN:is%>%^DIMisim ANSUFF_LOC ;
+N+AN+Der/Dim:as%>%^DIMis%> ANABSDECL ;
+N+AN+Der/Dim+N+AN+Sg:is%>%^DIMisim ANSUFF_SG ;
+N+AN+Der/Dim+N+AN+Pl:is%>%^DIMisim ANSUFF_PL ;


LEXICON ANimDECL !!= * @CODE@ for the animate declension, poss.-im-
ANABSDECL ;
+N+AN+Sg:%>i2m ANSUFF_SG ;
+N+AN+Pl:%>i2m ANSUFF_PL ;
+N+AN:%>i2m ANSUFF_LOC ;
+N+AN+Der/Dim:%>%^DIMis%> ANDIMim ; !poss.-im- after dim.suffix
+N+AN+Der/Dim:%>is%^DIMis%> ANDIMim ; !poss.-im- after dim.suffix
+N+AN+Der/Dim:i2m%>%^DIMis%> ANDIM ; !poss.-im- before dim.suffix
+N+AN+Der/Dim:i2m%>is%^DIMis%> ANDIM ; !poss.-im- before dim.suffix


LEXICON ANDIMim !!= * @CODE@ the diminutives with poss.-im- after the dim.suffix
+N+AN:%>im ANSUFF_LOC ;
 ANABSDECL ;
+N+AN+Sg:%>im ANSUFF_SG ;
+N+AN+Pl:%>im ANSUFF_PL ;


LEXICON ANiskwew !!= * @CODE@ for iskwêw. Special lexicon because of diminutive iskwês
 :w ANABSDECL ;
+N+AN+Sg:%>m ANSUFF_SG ;
+N+AN+Pl:%>m ANSUFF_PL ;
+N+AN:%>m ANSUFF_LOC ;
+N+AN+Der/Dim:%>%^DIMs%> ANimDIMw ;
+N+AN+Der/Dim:m%>%^DIMis%> ANDIM ; !-im- before dim.suffix


LEXICON ANimDECLw !!= * @CODE@ for the animate declension, poss.-im-. For nouns with final -w when poss -im- comes before diminutive. We could do the job in twolc instead. 
 :w ANABSDECL ;
+N+AN+Sg:w%>i2m ANSUFF_SG ;
+N+AN+Pl:w%>i2m ANSUFF_PL ;
+N+AN:w%>i2m ANSUFF_LOC ;
+N+AN+Der/Dim:w%>%^DIMsis%> ANimDIMw ;
+N+AN+Der/Dim:m%>%^DIMis%> ANDIM ; !-im- before dim.suffix


LEXICON ANimDIMw !!= * @CODE@ the diminutives with poss.-im-.
< "+N":0 "+AN":0 "@U.noun.abs@" >  LOC ; !
+N+AN:i2m ANSUFF_LOC ;
< "+N":0 "+AN":0 "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":0 "+AN":0 "+Pl":0 "@U.noun.abs@" >  PLak ; !
+N+AN+Sg:i2m ANSUFF_SG ;
+N+AN+Pl:i2m ANSUFF_PL ;


LEXICON ANDECLisis !!= * @CODE@ for the animate declension, -isis diminutive
ANABSDECL ;
+N+AN+Sg:%> ANSUFF_SG ;
+N+AN+Pl:%> ANSUFF_PL ;
+N+AN:%> ANSUFF_LOC ;
+N+AN+Der/Dim:%>is%^DIMis%> ANDIM ;

LEXICON ANDECLis !!= * @CODE@ for the animate declension, -is diminutive
ANABSDECL ;
+N+AN+Sg:%> ANSUFF_SG ;
+N+AN+Pl:%> ANSUFF_PL ;
+N+AN:%> ANSUFF_LOC ;
+N+AN+Der/Dim:%>%^DIMis%> ANDIM ;

LEXICON ANDECL !!= * @CODE@ for the animate declension, both -isis and -is diminutives
ANABSDECL ;
+N+AN+Sg:%> ANSUFF_SG ;
+N+AN+Pl:%> ANSUFF_PL ;
+N+AN:%> ANSUFF_LOC ;
!+N+AN+Der/Dim:%>%^DIMis%> ANDIM ;
+N+AN+Der/Dim:%>is%^DIMis%> ANDIM ;

LEXICON AN-NOPOSSw !!= * @CODE@ for the animate absolute declension and diminutive, ôhow
+N+AN+Der/Dim:%>s%^DIMis%> ANABSDECL ;
< "+N":w "+AN":0 "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":w "+AN":0         "@U.noun.abs@" >  OBVIATIVE ; !
< "+N":w "+AN":0 "+Pl":0 "@U.noun.abs@" >  PLak ; !
< "+N":n "+AN":0         "@U.noun.abs@" >  LOCahk ; !


LEXICON ANDIMDERIVATION !!= * @CODE@ for hardcoded diminutives
+N+AN+Der/Dim: ANDIM ; 

LEXICON ANDIM !!= * @CODE@ both for lexicalised and derivated diminutives
+N+AN: ANSUFF_LOC ;
ANABSDECL ;
+N+AN+Sg: ANSUFF_SG ;
+N+AN+Pl: ANSUFF_PL ;

LEXICON ANABSDECL !!= * @CODE@ for the animate absolute declension
< "+N":0 "+AN":0 "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":0 "+AN":0         "@U.noun.abs@" >  OBVIATIVE ; !
< "+N":0 "+AN":0 "+Pl":0 "@U.noun.abs@" >  PLak ; !
< "+N":0 "+AN":0         "@U.noun.abs@" >  LOC ; !
< "+N":i "+AN":n         "@U.noun.abs@" >  LOCahk ; !

!LEXICON ANDIMDECL ! Declension for animate diminutives, adding +Dim-tag. Not in use now.
!< "+N":0 "+AN":0 "+Sg":0 "+Dim":0 "@U.noun.abs@" >  # ; !
!< "+N":0 "+AN":0 "+Pl":0 "+Dim":0 "@U.noun.abs@" >  PLak ; !
!< "+N":0 "+AN":0 "+Dim":0 "@U.noun.abs@" >  LOC ; !
!+N+AN+Sg+Dim:%> ANSUFF_SG ;
!+N+AN+Pl+Dim:%> ANSUFF_PL ;
!+N+AN+Dim:%> ANSUFF_LOC ;


LEXICON ANIRRDECL	!!= * @CODE@ for atim and mistatim.
< "+N":0 "+AN":0 "+Sg":0 "@U.noun.abs@" >  # ; !
< "+N":0 "+AN":0 "+Pl":0 "@U.noun.abs@" >  PLwak ; !
< "+N":0 "+AN":0 "@U.noun.abs@" >  ANohk_LOC ; ! ohk
< "+N":0 "+AN":0 "@U.noun.abs@" >  ANwa_OBV ; ! -wa
+N+AN+Der/Dim:%>os%^DIMis%> ANDIM ;


LEXICON ANKININFL !!= * @CODE@ The lexicon gives a base form N+AN+Sg (if we want it)
< "+N":i "+AN":m "+Sg":m 0:â 0:w "@U.noun.3ipl@" > # ;
 ANIRRINFL ;

LEXICON ANKINiyINFL  !!= * @CODE@ Special treatment for nouns ending with -iy
< "+N":i "+AN":m 0:â 0:w "@U.noun.3ipl@" > # ;
+N+AN+Sg: ANiySUFF_SG ;
+N+AN+Pl: ANiySUFF_PL ;
+N+AN+Der/Dim:%^DIMisis%> ANDIMIRR ;  
+N+AN: ANSUFF_LOC ;  


LEXICON ANKININFL_MONOG !!= * @CODE@ No bigami
< "+N":0 "+AN":0 "+Sg":0 "+Px1Sg":%^POS                  "@U.noun.1sg@"  > SG_ ; !
< "+N":0 "+AN":0 "+Sg":0 "+Px2Sg":%^POS                  "@U.noun.2sg@"  > SG_ ; !
< "+N":0 "+AN":0 "+Sg":0 "+Px3Sg":%^POS                  "@U.noun.3sg@"  > OBVIATIVE ; !
< "+N":0 "+AN":0 "+Sg":0 "+Px3iSg":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > OBVIATIVE ; !
< "+N":0 "+AN":0 "+Pl":0 "+Px1Pl":%^POS  0:i 0:n 0:â 0:n  "@U.noun.1pl@"  >  PLak ;   ! exclusive Pl
< "+N":0 "+AN":0 "+Pl":0 "+Px12Pl":%^POS 0:i 0:n 0:a 0:w      "@U.noun.12pl@" >  PLak ; ! inclusive Pl
< "+N":0 "+AN":0 "+Pl":0 "+Px2Pl":%^POS  0:i 0:w 0:â 0:w  "@U.noun.2pl@"  >  PLak ; !
< "+N":0 "+AN":0 "+Pl":0 "+Px3Pl":%^POS  0:i 0:w 0:â 0:w  "@U.noun.3pl@"  >  OBVIATIVE ; ! 3rd person  possessor, hence Pl is -a
< "+N":0 "+AN":0 "+Pl":0 "+Px3iPl":%^POS 0:i 0:y 0:i 0:w      "@U.noun.3isg@" >  OBVIATIVE ; ! 3rd person  possessor, hence Pl is -a


LEXICON ANIRRINFL !!= * @CODE@ is also there to handle the highly irregular atim and mistatim
!< "+N":0 "+AN":0 "@U.noun.dep@" > # ; !Base form for dep nouns
+N+AN+Sg: ANSUFF_SG ;
+N+AN+Pl: ANSUFF_PL ;
+N+AN+Der/Dim:%>is%^DIMis%> ANDIMIRR ;
+N+AN:%> ANSUFF_LOC ;

LEXICON ANkwDECL !!= * @CODE@ takes -om as extra suffix in possessed form
< "+N":w "+AN":0 "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":w "+AN":0 "+Pl":0 "@U.noun.abs@" >  PLak ; 
< "+N":w "+AN":0         "@U.noun.abs@" >  OBVIATIVE ; !
< "+N":0 "+AN":0 "@U.noun.abs@" >  LOC ; !
+N+AN+Sg:om ANSUFF_SG ;
+N+AN+Pl:om ANSUFF_PL ;
+N+AN:om ANSUFF_LOC ;
+N+AN+Der/Dim:w%>%^DIMis%> ANDIM ;



!! !!The declinations for Inanimates

LEXICON INimDECL !!= * @CODE@ for the animate declension, possessive element Okimasis p. 134
INABSDECL ;
+N+IN+Sg:%>i2m INSUFF_SG ;
+N+IN+Pl:%>i2m INSUFF_PL ;
+N+IN:%>i2m INSUFF_LOC ;
+N+IN+Der/Dim:%> INimDIM ;


LEXICON INimDIM !!= * @CODE@ the diminutives with possessive element Okimasis p. 134
< "+N":i "+IN":s 0:%^DIM "@U.noun.abs@" >  LOC ; !
+N+IN:i2m%^DIMis%> INSUFF_LOC ;
< "+N":i "+IN":s "+Sg":%^DIM "@U.noun.abs@" >  SG_ ; !
< "+N":i "+IN":s "+Pl":%^DIM "@U.noun.abs@" >  PLak ; !
+N+IN+Sg:i2m%^DIM%>is INSUFF_SG ;
+N+IN+Pl:i2m%^DIM%>is INSUFF_PL ;


LEXICON INimDECLw !!= * @CODE@ for the animate declension, possessive element Okimasis p. 134
 :w INABSDECL ;
+N+IN+Sg:%>i2m INSUFF_SG ;
+N+IN+Pl:%>i2m INSUFF_PL ;
+N+IN:%>i2m INSUFF_LOC ;
+N+IN+Der/Dim:%> INimDIMw ;

LEXICON INimDECLy !!= * @CODE@ for the animate declension, possessive element Okimasis p. 134
 :y INABSDECL ;
+N+IN+Sg:%>i2m INSUFF_SG ;
+N+IN+Pl:%>i2m INSUFF_PL ;
+N+IN:%>i2m INSUFF_LOC ;
+N+IN+Der/Dim:%> INimDIMw ;

LEXICON INimDIMw !!= * @CODE@ the diminutives with possessive element Okimasis p. 134
< "+N":i2 "+IN":s 0:%^DIM 0:i 0:s "@U.noun.abs@" >  LOC ; !
+N+IN:i2m%^DIMis%> INSUFF_LOC ;
< "+N":i2 "+IN":s 0:%^DIM 0:i "+Sg":s "@U.noun.abs@" >  SG_ ; !
< "+N":i2 "+IN":s 0:%^DIM 0:i "+Pl":s "@U.noun.abs@" >  PLak ; !
+N+IN+Sg:i2m%^DIM%>is INSUFF_SG ;
+N+IN+Pl:i2m%^DIM%>is INSUFF_PL ;


LEXICON INDECL !!= * @CODE@ for the inanimate declension
INABSDECL ;
+N+IN+Sg:%> INSUFF_SG ;
+N+IN+Pl:%> INSUFF_PL ;
+N+IN:%> INSUFF_LOC ;
+N+IN+Der/Dim:%>is%^DIMis%> INDIM ;
+N+IN+Der/Dim:%>%^DIMis%> INDIM ;

LEXICON INDECLisis !!= * @CODE@ for the inanimate declension
INABSDECL ;
+N+IN+Sg:%> INSUFF_SG ;
+N+IN+Pl:%> INSUFF_PL ;
+N+IN:%> INSUFF_LOC ;
+N+IN+Der/Dim:%>is%^DIMis%> INDIM ;

LEXICON INDECLis !!= * @CODE@ for the inanimate declension
INABSDECL ;
+N+IN+Sg:%> INSUFF_SG ;
+N+IN+Pl:%> INSUFF_PL ;
+N+IN:%> INSUFF_LOC ;
+N+IN+Der/Dim:%>%^DIMis%> INDIM ;

LEXICON INDECLosi !!= * @CODE@ for the inanimate declension of ôsi, an irregular noun
< "+N":s "+IN":i "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":s "+IN":0 "+Pl":0 "@U.noun.abs@" >  PLa ; !
< "+N":s "+IN":0 "@U.noun.abs@" >  LOC ; !
+N+IN+Sg:s%> INSUFF_SG ;
+N+IN+Pl:s%> INSUFF_PL ;
+N+IN:s%> INSUFF_LOC ;
+N+IN+Der/Dim:s%>%^DIMis%> INDIM ;


LEXICON INDIMDERIVATION !!= * @CODE@
+N+IN+Der/Dim:  INDIM ;


LEXICON INDIM !!= * @CODE@ for the inanimate diminutives
INABSDECL ;
+N+IN: INSUFF_LOC ;
+N+IN+Sg: INSUFF_SG ;
+N+IN+Pl: INSUFF_PL ;

LEXICON INABSDECL !!= * @CODE@ for inanimate absolute declension
< "+N":0 "+IN":0 "+Sg":0 "@U.noun.abs@" >  SG_ ; !
< "+N":0 "+IN":0 "+Pl":0 "@U.noun.abs@" >  PLa ; !
< "+N":0 "+IN":0 "@U.noun.abs@" >  LOC ; !



!LEXICON INDIMDECL ! Declensions inanimate diminutives, adding +Dim 
!< "+N":0 "+IN":0 "+Sg":0 "+Dim":0 "@U.noun.abs@" >  # ; !
!< "+N":0 "+IN":0 "+Pl":0 "+Dim":0 "@U.noun.abs@" >  PLa ; !
!< "+N":0 "+IN":0 "+Dim":0 "@U.noun.abs@" >  LOC ; !
!+N+IN+Sg+Dim:%> INSUFF_SG ;
!+N+IN+Pl+Dim:%> INSUFF_PL ;
!+N+IN+Dim:%> INSUFF_LOC ;

LEXICON INALIENABLEDERIVATION !!= * @CODE@
+N+IN+Der/Dim:  INALIENABLEPOSS ;

LEXICON INALIENABLEPOSS !!= * @CODE@ for the inanimate possessive declension
< "+N":0 "+IN":0 "+Sg":0 "@U.noun.abs@" > # ; !Base form for dep nouns
+N+IN+Sg:%> INSUFF_SG ;
+N+IN+Pl:%> INSUFF_PL ;
+N+IN:%> INSUFF_LOC ;


LEXICON INALIENABLEPOSS_SG !!= * @CODE@ inanimate possessive declension, only Sg
< "+N":0 "+IN":0 "+Sg":0 "@U.noun.abs@" > # ; !Base form for dep nouns
+N+IN+Sg:%> INSUFF_SG ;

!! !!Diminutive suffixes


!! !Diminutive suffixes in animate stems taking the form -osis

LEXICON ANDIMIRR !!= * @CODE@
+N+AN+Sg: ANSUFF_SG ; !
+N+AN+Pl: ANSUFF_PL ; !
+N+AN: ANSUFF_LOC ;


!! !!Animate inflectional suffixes

LEXICON ANSUFF_SG !!= * @CODE@ 
< "+Px1Sg":%^POS                  "@U.noun.1sg@"  > SG_ ; !
< "+Px2Sg":%^POS                  "@U.noun.2sg@"  > SG_ ; !
< "+Px3Sg":%^POS                  "@U.noun.3sg@"  > OBVIATIVE ; !
< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > OBVIATIVE ; !
< "+Px1Pl":%^POS 0:i 0:n 0:â 0:n     "@U.noun.1pl@"  > SG_ ; ! exclusive Pl -nân not -inân CHECK ??
< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w     "@U.noun.12pl@" > SG_ ; ! inclusive Pl CHECK OK? 
< "+Px2Pl":%^POS 0:i 0:w 0:â 0:w         "@U.noun.2pl@"  > SG_ ; !
< "+Px3Pl":%^POS 0:i 0:w 0:â 0:w         "@U.noun.3pl@"  > OBVIATIVE ; !
< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w "@U.noun.3ipl@" > OBVIATIVE ; ! obviative plural possessor - Okimasis corrected


LEXICON ANSUFF_PL !!= * @CODE@ 
< "+Px1Sg":%^POS                   "@U.noun.1sg@"  >  PLak ; !
< "+Px2Sg":%^POS                   "@U.noun.2sg@"  >  PLak ; !
< "+Px3Sg":%^POS                   "@U.noun.3sg@"  >  OBVIATIVE ; !3rd person  possessor, hence Pl is -a
< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w  "@U.noun.3isg@" >  OBVIATIVE ; ! 3rd person  possessor, hence Pl is -a
< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n  "@U.noun.1pl@"  >  PLak ;   ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w      "@U.noun.12pl@" >  PLak ; ! inclusive Pl
< "+Px2Pl":%^POS  0:i 0:w 0:â 0:w  "@U.noun.2pl@"  >  PLak ; !
< "+Px3Pl":%^POS  0:i 0:w 0:â 0:w  "@U.noun.3pl@"  >  OBVIATIVE ; ! 3rd person  possessor, hence Pl is -a
< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w      "@U.noun.3isg@" >  OBVIATIVE ; ! 3rd person  possessor, hence Pl is -a

LEXICON ANSUFF_LOC
< "+Px1Sg":%^POS                  "@U.noun.1sg@"  > LOC ; !
< "+Px2Sg":%^POS                  "@U.noun.2sg@"  > LOC ; !
< "+Px3Sg":%^POS                 "@U.noun.3sg@"  > LOC ; !
< "+Px3iSg":%^POS 0:i 0:y "@U.noun.3isg@" > LOC ; !
< "+Px1Pl":%^POS  0:i 0:n "@U.noun.1pl@"  > LOCahk ;   ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n "@U.noun.12pl@" > LOCahk ; ! inclusive Pl
< "+Px2Pl":%^POS  0:i 0:w "@U.noun.2pl@"  > LOCahk ; !
< "+Px3Pl":%^POS  0:i 0:w "@U.noun.3pl@"  > LOCahk ; !
< "+Px3iPl":%^POS 0:i 0:y "@U.noun.3isg@" > LOC ; ! obviative plural possessor
!< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > LOC ; !
!< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n "@U.noun.1pl@"  > LOC ;   ! exclusive Pl
!< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w "@U.noun.12pl@" > LOC ; ! inclusive Pl
!< "+Px2Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.2pl@"  > LOC ; !
!< "+Px3Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.3pl@"  > LOC ; !
!< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > LOC ; ! obviative plural possessor




!! !!Inanimate inflectional suffixes


LEXICON INSUFF_SG !!= * @CODE@ 
< "+Px1Sg":%^POS                  "@U.noun.1sg@"  > SG_ ; !
< "+Px2Sg":%^POS                  "@U.noun.2sg@"  > SG_ ; !
< "+Px3Sg":%^POS                  "@U.noun.3sg@"  > SG_ ; !
< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > SG_ ; !
< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n "@U.noun.1pl@"  > SG_ ;   ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w "@U.noun.12pl@" > SG_ ; ! inclusive Pl
< "+Px2Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.2pl@"  > SG_ ; !
< "+Px3Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.3pl@"  > SG_ ; !
< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > SG_ ; ! obviative plural possessor


LEXICON INSUFF_PL !!= * @CODE@ 
< "+Px1Sg":%^POS                   "@U.noun.1sg@"  > PLa ; !
< "+Px2Sg":%^POS                   "@U.noun.2sg@"  > PLa ; !
< "+Px3Sg":%^POS                   "@U.noun.3sg@"  > PLa ; !
< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w  "@U.noun.3isg@" > PLa ; !
< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n  "@U.noun.1pl@"  > PLa ;   ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w  "@U.noun.12pl@" > PLa ; ! inclusive Pl
< "+Px2Pl":%^POS  0:i 0:w 0:â 0:w  "@U.noun.2pl@"  > PLa ; !
< "+Px3Pl":%^POS  0:i 0:w 0:â 0:w  "@U.noun.3pl@"  > PLa ; !
< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w      "@U.noun.3isg@" > PLa ; ! obviative plural possessor




LEXICON INSUFF_LOC
< "+Px1Sg":%^POS                  "@U.noun.1sg@"  > LOC ; !
< "+Px2Sg":%^POS                  "@U.noun.2sg@"  > LOC ; !
< "+Px3Sg":%^POS                  "@U.noun.3sg@"  > LOC ; !
< "+Px3iSg":%^POS 0:i 0:y "@U.noun.3isg@" > LOC ; !
< "+Px1Pl":%^POS  0:i 0:n "@U.noun.1pl@"  > LOCahk ;   ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n "@U.noun.12pl@" > LOCahk ; ! inclusive Pl
< "+Px2Pl":%^POS  0:i 0:w "@U.noun.2pl@"  > LOCahk ; !
< "+Px3Pl":%^POS  0:i 0:w "@U.noun.3pl@"  > LOCahk ; !
< "+Px3iPl":%^POS 0:i 0:y "@U.noun.3isg@" > LOC ; ! obviative plural possessor
!< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > LOC ; !
!< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n "@U.noun.1pl@"  > LOC ;   ! exclusive Pl
!< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w "@U.noun.12pl@" > LOC ; ! inclusive Pl
!< "+Px2Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.2pl@"  > LOC ; !
!< "+Px3Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.3pl@"  > LOC ; !
!< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w     "@U.noun.3isg@" > LOC ; ! obviative plural possessor


LEXICON ANiySUFF_SG 
< "+Px1Sg":%^POS 0:i 0:y                 "@U.noun.1sg@"  > SG_ ; !
< "+Px2Sg":%^POS 0:i 0:y                 "@U.noun.2sg@"  > SG_ ; !
< "+Px3Sg":%^POS 0:i 0:y                "@U.noun.3sg@"  > OBVIATIVE ; !The continuation lexicon adds an -a as a suffix to mark the obviative, since this is a 3-3 situation
< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w "@U.noun.3isg@" > OBVIATIVE ; !The continuation lexicon adds an -a as a suffix to mark the obviative, since this is a 3-3 situation
< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n "@U.noun.1pl@"  > SG_ ; ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w "@U.noun.12pl@" > SG_ ; ! inclusive Pl
< "+Px2Pl":%^POS  0:i 0:w 0:â 0:w "@U.noun.2pl@"  > SG_ ; !
< "+Px3Pl":%^POS 0:i  0:w 0:â 0:w    "@U.noun.3pl@"  > OBVIATIVE ; !The continuation lexicon adds an -a as a suffix to mark the obviative, since this is a 3-3 situation
< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w   "@U.noun.3ipl@" > OBVIATIVE ; ! obviative plural possessor, requires final -a


LEXICON ANiySUFF_PL
< "+Px1Sg":%^POS 0:i 0:y                 "@U.noun.1sg@"  >  PLak ; !
< "+Px2Sg":%^POS 0:i 0:y                  "@U.noun.2sg@"  >  PLak ; !
< "+Px3Sg":%^POS 0:i 0:y         "@U.noun.3sg@"  >  OBVIATIVE ; !
< "+Px3iSg":%^POS 0:i 0:y 0:i 0:w  "@U.noun.3isg@" >  OBVIATIVE ; !obviative plural possessor, hence Pl is -a
< "+Px1Pl":%^POS  0:i 0:n 0:â 0:n "@U.noun.1pl@"  >  PLak ;   ! exclusive Pl
< "+Px12Pl":%^POS 0:i 0:n 0:a 0:w     "@U.noun.12pl@" >  PLak ; ! inclusive Pl
< "+Px2Pl":%^POS 0:i 0:w 0:â 0:w "@U.noun.2pl@"  >  PLak ; !
< "+Px3Pl":%^POS 0:i 0:w 0:â 0:w     "@U.noun.3pl@"  >  OBVIATIVE ; !
< "+Px3iPl":%^POS 0:i 0:y 0:i 0:w    "@U.noun.3isg@" >  OBVIATIVE ; ! obviative plural possessor, hence Pl is -a


!! !Singular/plural possessed suffixes


!LEXICON SG_naan  Not in use
!:%>nân SG_ ;


!LEXICON SGwaaw Not in use
!:%>wâw SG_ ;


!LEXICON PL_naan_ak  Not in use
!:%>nânak # ;


!LEXICON PLwaaw_ak  Not in use
!:%>wâwak # ;


!LEXICON PL_waaw_A  Not in use
!:%>wâwa # ;


LEXICON SG_ !!= * @CODE@ 
 # ;


LEXICON PLa !!= * @CODE@ 
:%>a # ;


LEXICON PLak !!= * @CODE@ 
:%>ak # ;


LEXICON PLwak !!= * @CODE@ 
:%>wak # ;


!! !Locative suffixes

LEXICON LOC !!= * @CODE@ 
+Loc:%>i%^LChk  # ;

LEXICON ANohk_LOC !!= * @CODE@ 
+Loc:%>o%^LChk # ;

LEXICON LOCahk !!= * @CODE@ 
+Loc:%>â%^LChk  # ;



!!Obviative suffix
LEXICON OBVIATIVE
+Obv:%>a # ;

LEXICON ANwa_OBV
+Obv:%>wa # ;
