# -*- cg-pre-pipe: "$GTHOME/gtcore/scripts/preprocess --abbr=$GTHOME/langs/crk/tools/preprocess/abbr.txt | hfst-optimised-lookup  $GTHOME/langs/crk/src/analyser-disamb-gt-desc.hfstol | $GTHOME/gtcore/scripts/lookup2cg" -*-


#   ============================ #
#!! !!!Plains Cree disambiguator 
#   ============================ #


# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<¶>";



# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); 
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

LIST N = N ;
LIST V = V ;

LIST Ipc = Ipc ;
LIST Interj = Interj ;

LIST Adv = Adv ;
LIST CC = CC ;
LIST CS = CS ;

LIST AN = AN ;
LIST IN = IN ;

LIST AI = AI ;
LIST II = II ;
LIST TA = TA ;
LIST TI = TI ;


LIST Cnj = Cnj ;
LIST ConNeg = ConNeg ;
LIST Cond = Cond ;
LIST Def = Def ;
LIST Del = Del ;
LIST Dem = Dem ;
LIST Dim = Dim ;
LIST Dim/Der = Dim/Der ;
LIST Dist = Dist ;
LIST Fut = Fut ;
LIST Imm = Imm ;
LIST Imp = Imp ;
LIST Incl = Incl ;
LIST Ind = Ind ;
LIST Inf = Inf ;
LIST Int = Int ;
LIST Interr = Interr ;
LIST Loc = Loc ;
LIST Med = Med ;
LIST Neg = Neg ;
LIST Num = Num ;
LIST Obv =  Obv ;
LIST Pos = Pos ;
LIST Prf = Prf ;
LIST Pron = Pron ;
LIST Prox = Prox ;
LIST Prs = Prs ;
LIST Prt = Prt ;
LIST Qst = Qst ;
LIST Sbj = Sbj ;


LIST SgO = SgO ;
LIST P2lO = P2lO ;
LIST Pl = Pl ;
LIST PlO = PlO ;
LIST 12Pl = 12Pl ;
LIST 12PlO = 12PlO ;
LIST 1Pl = 1Pl ;
LIST 1PlO = 1PlO ;
LIST Sg = Sg ;
LIST 1Sg = 1Sg ;
LIST 1SgO = 1SgO ;
LIST 2Pl = 2Pl ;
LIST 2Sg = 2Sg ;
LIST 2SgO = 2SgO ;
LIST 3Pl = 3Pl ;
LIST 3PlO = 3PlO ;
LIST 3Sg = 3Sg ;
LIST 3SgO = 3SgO ;
LIST 4Pl = 4Pl ;
LIST 4PlO = 4PlO ;
LIST 4Sg = 4Sg ;
LIST 4SgO = 4SgO ;
LIST 5Sg = 5Sg ;
LIST 4Sg/Pl = 4Sg/Pl ;
LIST 4Sg/PlO = 4Sg/PlO ;

LIST Px12Pl = Px12Pl ;
LIST Px1Pl = Px1Pl ;
LIST Px1Sg = Px1Sg ;
LIST Px2Pl = Px2Pl ;
LIST Px2Sg = Px2Sg ;
LIST Px3Pl = Px3Pl ;
LIST Px3Sg = Px3Sg ;
LIST Px4Pl = Px4Pl ;
LIST Px4Sg = Px4Sg ;
LIST Der/Dim = Der/Dim ;

LIST CLB = CLB ;

LIST PV/kah = "PV/kah" PV/kah ;
LIST RdplS = "RdplS" RdplS ;
LIST RdplW = "RdplW" RdplW ;

LIST PREVERB = "RdplS" "RdplW" "PV/e" "PV/ka" "PV/kaa" "PV/kaa_ki" "PV/acici" "PV/ahcahkowi" "PV/akawaci" "PV/ako" "PV/akoci" "PV/apihci" "PV/apisci" "PV/apisi" "PV/apisisi" "PV/ase" "PV/aseya" "PV/ati" "PV/atimi" "PV/ayamihawi" "PV/ayamihewi" "PV/ayaso" "PV/ayi" "PV/ahci" "PV/ahkami" "PV/ako" "PV/akwa" "PV/ami" "PV/aniski" "PV/apihci" "PV/apihtawi" "PV/apihta" "PV/apihta_kisikawi" "PV/asawi" "PV/ase" "PV/asowi" "PV/aste" "PV/ata" "PV/ayici" "PV/cipehtako" "PV/isi" "PV/isko" "PV/ispi" "PV/ispihci" "PV/itahto" "PV/ikate" "PV/ka_ki" "PV/ka_ki" "PV/kakepaci" "PV/kakwahyaki" "PV/kakwayaki" "PV/kakwe" "PV/kakweci" "PV/kanaci" "PV/kape" "PV/kaski" "PV/kaskitewi" "PV/kayasi" "PV/kah" "PV/kah-kape" "PV/kah-kape" "PV/kamwaci" "PV/kaspi" "PV/kawi" "PV/ke" "PV/kekaci" "PV/ket" "PV/ketiski" "PV/kici" "PV/kihci" "PV/kika" "PV/kipi" "PV/kisci" "PV/kise" "PV/kisipi" "PV/kisiska" "PV/kisiwi" "PV/kisiwi" "PV/kita" "PV/kita_ki" "PV/kita_ki" "PV/kitimaki" "PV/kiye" "PV/kiyi" "PV/kimoci" "PV/kipi" "PV/kisi" "PV/kiski" "PV/kisopwe" "PV/kiwaci" "PV/kiwe" "PV/koci" "PV/kota" "PV/kotate" "PV/kwataki" "PV/kwayako" "PV/kwayaski" "PV/kwayasko" "PV/kwayaci" "PV/kwahci" "PV/kwaskwe" "PV/kwataki" "PV/kweski" "PV/kwetawi" "PV/kwitawi" "PV/maci" "PV/maci_manitowi" "PV/mahti" "PV/mana" "PV/mani" "PV/masta" "PV/matwe" "PV/maaci" "PV/mahi" "PV/mamawi" "PV/maninakisko" "PV/maski" "PV/mayaci" "PV/mayi" "PV/mecimwaci" "PV/mêkwa" "PV/mesci" "PV/mesti" "PV/mihko" "PV/mihyawe" "PV/misakame" "PV/misi" "PV/mistiko" "PV/miyo" "PV/mosci" "PV/mohco" "PV/mwayi" "PV/nahi" "PV/nahta" "PV/naki" "PV/napaki" "PV/naspaci" "PV/natawi" "PV/nawaci" "PV/naci" "PV/nanitaw" "PV/natakasi" "PV/nawayawi" "PV/nehiyawi" "PV/nihta" "PV/nipahi" "PV/nisihkaci" "PV/nitawi" "PV/nihci" "PV/nihtaciwe" "PV/nikani" "PV/nimi" "PV/nipa" "PV/niso" "PV/nohte" "PV/ocihci" "PV/ohci" "PV/ohtiskawi" "PV/osami" "PV/osawaski" "PV/osawi" "PV/oski" "PV/otami" "PV/o" "PV/oh" "PV/paci" "PV/pahki" "PV/pakwano" "PV/papa" "PV/papami" "PV/papasi" "PV/pasiko" "PV/paspi" "PV/pahkaci" "PV/pahko" "PV/pasci" "PV/pasici" "PV/pe" "PV/peyako" "PV/pimi" "PV/pimici" "PV/pimipahci" "PV/pisci" "PV/pihci" "PV/pihtawe" "PV/pihtoke" "PV/pikiskaci" "PV/pimi" "PV/pitosi" "PV/piwi" "PV/poni" "PV/posko" "PV/pwana" "PV/pwatawi" "PV/saskaci" "PV/sakewe" "PV/sapo" "PV/saposci" "PV/sasakici" "PV/sehke" "PV/sesawi" "PV/sikaci" "PV/simaci" "PV/sipwe" "PV/sisikoci" "PV/sisiwe" "PV/sikawi" "PV/sohkahat" "PV/sohki" "PV/soniyawi" "PV/ta" "PV/ta_ki" "PV/tahci" "PV/tahki" "PV/tahkohci" "PV/tahto" "PV/takahki" "PV/tako" "PV/tasi" "PV/tah" "PV/tahci" "PV/tapi" "PV/tapisi" "PV/tehci" "PV/tepi" "PV/tewi" "PV/teyi" "PV/tipi" "PV/tita" "PV/tomi" "PV/wahke" "PV/wani" "PV/wayawi" "PV/wayesi" "PV/wa" "PV/wah" "PV/waki" "PV/wapani" "PV/wapohki" "PV/wasa" "PV/wase" "PV/wawiye" "PV/wehci" "PV/wiyipi" "PV/wihpi" "PV/wini" "PV/wipi" "PV/wipo" "PV/wisaki" "PV/wito" "PV/yahki" "PV/yikate" "PV/yipe" "PV/yoski" ;


# Sets
# ====

LIST WORD = N V Ipc Interj Pron ;


SET NOT-VERB = WORD - V ;
SET NOT-NOUN = WORD - N ;

LIST NUMBER = Sg Pl ;
LIST GENDER = AN IN ;
SET NUMBERGENDER = (AN Sg) OR (AN Pl) OR (IN Sg) OR (IN PL) ;

LIST LONGVERBEND = ("<.*âhk>"r) ("<.*âhkik>"r) ("<.*ân>"r) ;
LIST SHORTVERBEND = ("<.*ahk>"r) ("<.*ahkik>"r) ("<.*an>"r) ;


# LIST SIERRA-GUOVLU = (".*guovlu"r) "suomabealli" "norggabealli" "riddu" "ruoŧabealli" # "ruoššabealli" ;

# Noun sets

LIST HUMAN = "awâsis" "okimâw" "iyiniw" "iskwêw" ;

# Boundary sets

# Complementary set

# Case sets

# Some case, but not...

LIST COMMA = (",") ;
SET MARK =  COMMA | ("\\") | ("\;") ; #"

LIST PUNCT-LEFT = (PUNCT LEFT) ;
LIST PUNCT-RIGHT = (PUNCT RIGHT) ;
SET PRE-APP   = COMMA OR PUNCT-LEFT ;

# Here come the rules #

BEFORE-SECTIONS 

SECTION

# Different taste, different analysis
#SELECT PV/kah IF (0 RdplS) ;
REMOVE PV/kah IF (0 RdplS) ;

# We remove the particle if the word can be something more interesting:
SELECT:ChooseIpc Ipc IF (0 N OR V) ;

# Sentence-final niyâ is a particle
SELECT:1SgIfV1Sg 1Sg if (0 ("niya"))(*0C V + 1Sg);
	
# We go for derivation, more to look at when we are searching a lemme in Korp:
SELECT:DerYes Der/Dim (0C N) ;

# We say post/prenominal words are determiners, not particles, if they agree
REMOVE:DemNotIpc Ipc (-1 N + $$NUMBERGENDER)(0 Pron + Dem + $$NUMBERGENDER) ;
REMOVE:DemNotIpc Ipc ( 1 N + $$NUMBERGENDER)(0 Pron + Dem + $$NUMBERGENDER) ;
	## Mîcisowinâhtik ôma.

# Demonstratives follow nouns.
SELECT:DemNotIpcDN Dem (0 Ipc)(1 N) ;
SELECT:DemNotIpcND Dem (-1 N)(0 Ipc) ;

SELECT:OmaIpc Ipc (0 ("ôma"))(-1 NOT-NOUN OR BOS)(1 NOT-NOUN OR CLB);

SELECT:DefSubj Def IF (1 4Sg/Pl);

#This rule to come after the ones above.
REMOVE:DemNotDef Def IF (0 Dem);

# Interrogatives in questions
REMOVE:InterrNotN N (0 Interr)(NOT *-1 Interr)(*1 ("?"));

# NP-internal agreement
REMOVE:SgAgr Sg (0 N OR Pron)(1C Dem + Pl) ;
REMOVE:PlAgr Pl (0 N OR Pron)(1C Dem + Sg) ;

# N Px number agreement
REMOVE:PxSg Px3Pl (-1 N + Sg);
REMOVE:PxPl Px3Sg (-1 N + Pl);

# Singular object
REMOVE:SgIfObjSg 3PlO (0 3SgO)(*0 Sg + Obv);
REMOVE:PlIfObjSg 3SgO (0 3SgO)(*0 Pl + Obv);

# Mood rules -- do not understand moods yet

REMOVE:IndOnly Cnj (0 Ind)(NOT *0 Ind);

REMOVE Fut (0 Ind);
REMOVE Imp (0 Ind)(*0 N + Sg);

# REMOVE:2SgWrong 2Sg IF (0 ("<.*ân>"r) + 1Sg) ;
# REMOVE:1SgWrong 1Sg IF (0 ("<.*an>"r) + 2Sg) ;
# REMOVE:12PlWrong 12Pl IF (0 ("<.*âhk>"r) + 1Pl) ;
# REMOVE:1PlWrong 1Pl IF (0 ("<.*ahk>"r) + 12Pl) ;
# 
REMOVE:12PlOWrong 12PlO IF (0 TA + LONGVERBEND + 1PlO) ;
REMOVE:1PlOWrong 1PlO IF (0 TA + SHORTVERBEND + 12PlO) ;

REMOVE:CnjNeedPvrb Cnj IF (NOT 0 PREVERB) ;


REMOVE:2SgWrong 2Sg IF (0 LONGVERBEND + 1Sg) ;
REMOVE:1SgWrong 1Sg IF (0 SHORTVERBEND + 2Sg) ;



#kikway disambiguation
REMOVE:kikway Pron IF (0 ("kîkway")) ;
SELECT:INkikway IN IF (0 ("kîkway") LINK *0 TI) ;

#ka-ki disambiguation
SELECT:kaPrt Prt IF (0 ("PV/kaa") + ("<kâ-.*>"r)) ;

#2>3/3>4 disambiguation
SELECT:disambig23Sg 3Sg IF (0 TA + ("<.*ât>"r)) ;
SELECT:disambig23Pl 3Pl IF (0 TA + ("<.*âcik>"r)) ;

#Remove RdplW if Kâ
REMOVE:rdplwkaa ("RdplW") IF (0 ("PV/kaa")) ; 


#Remove PVs
REMOVE:fewerPV  ("PV.*"r) ;

AFTER-SECTIONS 


