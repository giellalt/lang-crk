!!!Free and Open source Plains Cree analyser giella-crk

;Authors: Divvun and Giellatekno teams, community members
;Software version: 2012
;Documentation license: GNU GFDL
;SVN Revision: $Revision: 68217 $
;SVN Date: $Date: 2013-01-16 11:31:33 +0200 (Wed, 16 Jan 2013) $

!!!giella-crk

This is free and open source Plains Cree morphology.

           !!!Plains Cree morphological analyser
INTRODUCTION TO MORPHOLOGICAL ANALYSER OF Plains Cree LANGUAGE.


 !!!Definitions for Multichar_Symbols

!!Analysis symbols

The morphological analyses of wordforms of Plains Cree are presented
in this system in terms of the following symbols.
(It is highly suggested to follow existing standards when adding new tags).

POS

 * +N	        
 * +V	        
 * +Prop	        
 * +Adv        
 * +CC	        
 * +CS	        
 * +Interj     
 * +Pron       
 * +Num        
 * +Arab        
 * +Rom        
 * +PUNCT       = punctuation symbols
 * +LEFT        = the left part of a paired punctuation symbol
 * +RIGHT       = the right part of a paired punctuation symbol
 * +CLB         = clause boundary symbols

 * +Loc         Locative

 * +Dim      Diminutive

  * +Ipc		 Indeclinable Particle

 * +Dem         Demonstrative
 * +Def	     This is the intransitive demonstrative, i.e. the definite.
 * +Prox	     Demonstrative Proximate
 * +Med	     Demonstrative Medial
 * +Dist	     Demonstrative Distal

 * +Foc	     Focus particle

Verbal MSP
 * +Prs  
 * +Fut  

 * +Prt  
 * +Prf  
 * +Cnj  
 * +Int   This tag is for the Future Intentional
 * +Def   This tag is for the Future Definite

 * +Ind   Indicative, aka Independent
 * +Imp   Imperative, consider deleting +Imp tag
 * +Del   Delayed imperative
 * +Imm   Immediate imperative, consider deleting +Imp tag
 * +Sbj   Subjunctive, aka Conjunct mode, ê-
 * +Cond  TODO: Should Future Conditional be tagget Fut only? Conor: we will split the Future tags




 * +1Sg     first singular
 * +2Sg     etc
 * +2Sg/Pl    Used in the syncretic 2sg/pl -> 1pl in the VTA paradigms
 * +3Sg    

 * +1Pl     1Pl is exclusive plural (I, them, not you)
 * +2Pl    
 * +3Pl    
 * +12Pl    12Pl is inclusive plural (I, you, ...)
 * +4Sg     Fourth Person inanimate singlar (used only in the VII paradigms)
 * +4Pl     Fourth Person inanimate plural (used only in the VII paradigms)
 * +4Sg/Pl    
 * +5Sg/Pl    

 * +1SgO    objective conjugation
 * +2SgO   
 * +2Sg/PlO    Used in the syncretic 2sg/pl -> 1pl in the VTA paradigms
 * +3SgO   
 * +SgO    
 * +1PlO   
 * +2PlO   
 * +3PlO   
 * +PlO    
 * +4Sg/PlO  ambiguous 4th person (both Singular and Plural)
 * +5Sg/PlO  ambiguous 5th person (both Singular and Plural)
 * +UnspecTI1  Unspecified actor forms Okimāsis, where TI -t stem becomes -c p. 118
 * +Unspec  Unspecified actor forms Okimāsis p. 118


 * +Inf     infinitive (infinite?)
 * +Pos     postitive
 * +Neg     negative
 * +ConNeg  accompanying negative form

Nominal MSP
 * +Sg		  singular
 * +Pl		  plural

 * +Px1Sg	  person prefixes for nouns
 * +Px2Sg	 
 * +Px3Sg	 
 * +Px4Sg	 
 * +Px1Pl	  obviative
 * +Px12Pl	  inclusive
 * +Px2Pl	 
 * +Px3Pl	 
 * +Px4Pl	 
 * +Der/Dim  diminutive derivation

 * RdplW+  Reduplication Type 1 (Weak)
 * RdplS+  Reduplication Type 2 (Strong)

 * +AI       intransitive with animate subject,
 * +II       intransitive with inanimate subject,
 * +TA       transitive with animate object, and
 * +TI       transitive with inanimate object.

 * +AN		  animate noun
 * +IN		  inanimate noun


 * +Incl     me too, etc.
 * +Qst      yes-no question particle ci

!!Auxiliary symbols

These symbols either shape or govern the
morphophonological structure

 * %> 		  suffix border
 * +WAK  	  tag to keep track of -wak plurals


 * %^LOC      Locative
 * w2       mowêw:mow2
 * t2 		  Prefix in possessives
 * t3       t to s in VTA-4
 * t4       t:c in VTI-1 with unspecified actor
 * y2       epenthetic joiner in reduplication of vowel-initial stems
 * y3       epenthetic joiner in reduplication of vowel-initial stems
 * i2       vta-5i epenthesis.

 * h2 		  Prefix in possessives

 * %^EGLOT    glottal stop after e, for eh- in conjunctive mood
 * %^EA       ê to â in 1, 2 person of ê-stems
 * %^TS       t3 to s in VTA-4 verbs before some i-init suf
 * %^NII      n to h or 0 in VII verbs when before k-init suf
 * %^WI       w to 0 in vta-2 verbs when before i-init suf
 * %^IO       VTACw w + i becom o
 * %^MI     Wici epenthesis




!!Usage tags

These tags distinguish different special-purpose analysers
and generators from each other. Thus, for examples, we have
normative and descriptive analysers, and generators for different purposes.

 * +Err/Orth  tag for substandard forms
 * +Use/NG   not-generate, for ped generation isme-ped.fst



Flagdiacritics

These are documented in Chapter 8 of Beesley/Karttunen, p. 456 zB.

For indicative, there are prefixes, so here we need one
flag for each person-number combination. Note that
for the inverse objective conjugation, the flag refers to
the __prefix__, not to the subject. So ''indsg1'' refers to either
subject = 1Sg or object = 1Sg. The 3-3 forms are prefixless.

Conjugation classes



Preverbs






The conjunct form always has
the ê- prefix, and future conditional never has a prefix.

 * @U.verb.FutCon@  Future Conditional

 * @U.mood.cnj@   Conjunct
 * @U.verb.fut@   Future Conditional

Prefixes with a certain phonological content:

 * @U.perspref.NULL@   test
 * @U.perspref.NI@   test
 * @U.perspref.KI@   test
 * @U.person.NULL@   test
 * @U.person.NI@   test
 * @U.person.KI@   test




 * @U.verb.1sgindep@ 
 * @U.verb.2sgindep@ 
 * @U.verb.3osgindep@ 
 * @U.verb.1plindep@ 
 * @U.verb.12plindep@ 
 * @U.verb.2plindep@ 
 * @U.verb.3plindep@ 

 * @U.noun.1sg@ 
 * @U.noun.2sg@ 
 * @U.noun.3sg@ 
 * @U.noun.4sg@ 
 * @U.noun.1pl@ 
 * @U.noun.12pl@ 
 * @U.noun.2pl@ 
 * @U.noun.3pl@ 
 * @U.noun.4pl@ 

 * @U.noun.abs@  
 * @U.noun.dep@ 


  LEXICON Root          is where it all starts

 * NounPrefixes ;       
 * VerbPrefixes ;       
 * Pronoun ;            
 * Propernouns ;        
 * Punctuation ;        
 * Particles ;          
 * Numerals ;           

!!!Alphabet


 *  t2:0       t between prefix and vowel-initial stem
 *  t3:t       t to s in VTA-4
 *  t4:c       t to c in VTI-1
 *  w2:w       for keeping the final -w in mow
 *  y2:0       epenthetic joiner in reduplication of vowe-initial stems
 *  y3:0       epenthetic joiner in reduplication of vowe-initial stems
 *  i2:0       vta5-i epenthesis
 *  %>:0       suffix boundary
 *  %<:0       prefix boundary
 *  %^LOC:0    Locative suffix alternation trigger
 *  %^DIM:0    Diminutive alternation trigger
 *  %^EGLOT:0  Conjunctive êh trigger
 *  %^POS:0    Possessive alternation trigger
 *  %^DUPL1:0   Reduplication consonant place holder 
 *  %^DUPL2:0   Reduplication consonant place holder 
 *  %^MI:0     wici-mi consonant place holder 
 *  %^EA:0     ê to â in 1, 2 person of ê verbs
 *  %^TS:0      t to s in VTA-4 verbs before some i-init suf
 *  %^NII:0     n to h or 0 in VII verbs when before k-init suf
 *  %^WI:0       w to 0 in vta-2 verbs when before k-init suf
 *  %^IO:0     VTACw w + i become o
 *  %^VS:0     Ruling out verbs from the w/i deletions in conjunction with possessives.


!!!Sets

 *  Vow = a e i o u y â ê î ô           
          A E I O U Y Â Ê Î Ô ;         

 *  ShortVow = a ê i o A E I O ;       

 *  LongVow = â ê î ô Â Ê Î Ô ;      

 *  Vow2 = a e i o u â ê î ô       
         A E I O U Â Ê Î Ô ;     






!!!Rules


__o:w in possessive prefix__ , w- in front of î, a, â (?) in possessive forms: 
mahkwan:wahkwan, mîpit:wîpit, mîyaw:wîyaw

__o:0 in possessive prefix__ , Okimasis p. 140 

__i:0 after possessive prefix__ , ospiton 

__t2:t between prefix and vowel__ , joiner for nouns with initial vowel.

__t:c in diminutives __ Okimasis 2004: 13, Rule 2.




__Diminutives - t2 changes to c __ , for the joiner. There are exeptions, but for they we have to make rules, or mark them with a dummy



__i:o alternations __  for suffix initial vowel, stem final -Cw

__Vowel final stems: vowel deletion when suffix has initial a or i __ , when the suffix  niska, wâwi+a wâwi+ihk wâwi+is, oskâyi+a, êsa+ihk



__w:0 alternations __  in -Cw stems



__i:ii- alternations in stem__ , Okimasis p. 13 pikiw : pikîs

__o:oo- alternations in stem__ , initially in stem, and for stem vowel when final -oy/ow
okimâw:nitôkimâm, nitohtôsâpom tohtôsâpoy tohtôsâpôhk, cohcôsâpôs, cahcahkâyôhk, cahcahkâyôs


__a:aa alternations in stem __  for stem vowel when final -ay


__y:0 alternations __  for stem vowel when final -Vy




__i:0 in suffix for stem final -Vw/Vy __ (first) : Okimasis 2004: 26, Rule 2, 8: Vow + (w/y) + ihk 
cahcahkâyow+ihk, tohtôsâpoy+ihk, cahcahkâyow+is, cohcôsâpoy+is, o+pikiw+iyiwa	 maniway+i


VERBS

__h glottal stop for initial vowel stems in verbs: Conjunctive__


__e and ee to aa rule in first and second person__

__a to ee rule in first and second person__


__a to ee rule in first and second person__

__a to ee rule in first and second person__



__n:h before k suf in VII__

__i:0 in VTA-Vw__

__w2:0 in VTA-Vw__

__Lengthening of vowels before dissappearing stem final <w>__


__n:0 before k suf in VII__

__i:o i to o when after %^IO in VTACw__

__VTACw w to nothing when before %^IO__

__Matching weak/strong reduplication consonant placeholder %^DUPL1 with stem-initial consonant__

__Setting double weak+strong reduplication consonant placeholder %^DUPL2 with stem-initial consonant__

__Inserting epenthetic y in weak reduplication of vowel-initial stem__

__Inserting epenthetic y in strong+weak reduplication of vowel-initial stem__

__Unspecified Actor t:c in VTAVw__

__Cns mi epenthesis__

__Cns mi epenthesis2__


__Cns mi epenthesis2__
__Cns mi epenthesis2__
__Cns mi epenthesis2__

__s:0 in kost- VTA-4__

__i2:i in vta-5i__

                          !!!Plains Cree noun stems                           


Wolvengrey types:

* NI1  C-Initial Regular NI Stem : cîmân “canoe, boat”
* NI1  V-Initial Regular NI Stem : astotin “hat, cap”
* NI2  C-Initial VW NI Stem : mîkisasâkay “beaded coat, beaded dress”
* NI2  V-Initial VW NI Stem : oskasâkay “new coat, new dress”
* NI3  C-Initial Cw NI Stem : pahkêkinw:pahkêkinw “leather, rawhide”
* NI3  V-Initial Cw NI Stem : askêkin:askêkinw “fresh rawhide”
* NI4  C-Initial Single-Syllable NI Stem : wâw– “egg”
* NI4  V-Initial Single-Syllable NI Stem : osk-ây– “new item, new thing”
* NI4  V-Initial Single-Syllable irregular NI Stem : ôs– “canoe, boat”
* NI4w C-Initial Single-Syllable-/w/ NI Stem : mihkw– “blood”

* NA1  C-Initial Regular NA Stem : pahkwêsikan “bannock”
* NA1  V-Initial Regular NA Stem : asikan “sock”
* NA2  C-Initial V-Glide NA Stem : kihc-ôkiniy “tomato”
* NA2  V-Initial V-Glide NA Stem : ayapiy “net”
* NA3  C-Initial C-/w/ NA Stem : masinahikanâhtik:masinahikanâhtikw– “pencil”
* NA3  V-Initial C-/w/ NA Stem : askihkw– “kettle, pail”
* NA4  C-Initial Single-Syllable NA Stem : niska “goose” (and siht– “spruce”)
* NA4  V-Initial Single-Syllable NA Stem : esa “clam; shell”
* NA4w C-Initial Single-Syllable-/w/ NA Stem : wâhkwa:wâhkw “roe, fish eggs; lump of roe”
* NA4w V-Initial Single-Syllable-/w/ NA Stem : ihkwa:ihkw “louse”



!!The stems

!Animate and inanimate Nouns

STEMS adds an affixmark and redirects to STEMLIST





STEMLIST for nouns getting prefixes ni-, ki-, o- \\



DEP-KINTERMSSTEMS adds an affixmark and redirects to KINTERMLIST

DEP-KINTERMLIST for dependent nouns getting prefixes n-, k-, o- \\

 -tânis:itânis AN_KININFL "daughter" ; !¢nicânis yaml 
 -kosis:ikosis AN_KININFL "son" ; !¢nikosis 	

IN dependent nouns, which have no m-form(?) in Wolvengrey

DEP-M-INIT-STEMS adds an affixmark and redirects to DEP-M-LIST 

DEP-M-LIST for dependent nouns getting prefixes n-, k-, o-, pluss generic form m- \\
 maniway:aniway IN_DEP_INIT_M_SG "cheek" ; !yaml 	
 mîpit:îpit IN_DEP_INIT_M "tooth" ; !yaml  	

Plains Cree verb stems                       



The verbs are analysed as follows:
* The verbs get prefixes in this file, marked with ''flag diacritics'' (the @ symbols)
* Then come the stems themselves
* Finally, and in another file, come the suffixes, including flag diacritics
  to ensure that the correct prefixes and suffixes are matched together



The Plains Cree verbs are divided in four groups, but all of them are in the same verblexicon:
# AI: Intransitive animate
# II: Intransitive inanimate
# TA: Transitive animate
# TI: Transitive inanimate



 LEXICON VERBSTEMS  here come all the verbstems \\


 !nipâw:nipâ AICONJw "sleep" ;  GG
 !mâto AICONJ "cry" ;  GG
 !mîciso AICONJ "eat" ;  Variation in length of first vowel, here following Okimâsis. !GG
 !waniskâw:waniskâ AICONJ "rise, get up" ;  
 !micisiw:micisi AICONJ "eat" ; 
 !nohtehkatew:nohtehkate AICONJ "be hungry" ; 
 !atoskêw:atoskê AICONJw "work" ;  test
 !nêhiyawêw:nêhiyawê AICONJw "work" ; 










































                          !!!Plains Cree noun morphology                           


!!!Prefixes



NounPrefixes redirects to AN-IN, BODY, INALIENABLE


AN-IN adds the prefixes ni-, ki-, o-. Redirects to STEMS



DEP-M-INIT  adds the prefixes n-, k-, o- (which alternate to w- in twolc), and generic form m- . Redirects to DEP-M-INIT.



DEP-KINTERMS  adds the prefixes n-, k-, o- (which alternate to w- in twolc) Redirects to DEP-KINTERMSSTEMS



Now, lexc directs us to the ../stems/nouns.lexc file,
where we find all the nominal stems. The suffixes are then
found at the end of this file.




!!!Suffixes


!!The declensions for Animates 



 * LEXICON AN_DECL_0POSS  for the animate declension, Dim: -isis and -is 

 * LEXICON AN_DECL_PL  for the animate declension, Dim: -isis and -is 

 * LEXICON AN_DECLis  for the animate declension, Dim: -is diminutives


 * LEXICON AN_DECLisis  for the animate declension, Dim: -isis diminutives




 * LEXICON AN_DECL  for the animate declension, poss.-im-, Dim: -is
 * LEXICON ANimDECLisis  for the animate declension, poss.-im-, Dim: -isis

 * LEXICON ANimDECLis  for the animate declension, poss.-im-, Dim: -is


 * LEXICON ANimDECLw  for the animate declension, stem -w, poss.-im-, Dim: -is


 * LEXICON AN_DIM  both for lexicalised and derivated diminutives


 * LEXICON ANimDECLnaahk  for the animate declension, poss.-im-, Dim: -is, , with collectiv loc

 * LEXICON ANABSDECLnaahk  for the animate absolute declension, with collectiv loc


 * LEXICON ANimDECLnaahk-NOPOSS  for the animate declension, poss.-im-, Dim: -is, , with collectiv loc


 * LEXICON ANABSDECL  for the animate absolute declension

 * LEXICON ANABSDECL_PL  for the animate absolute declension





 * LEXICON AN_KININFL_MONOG  Lexicon with reduces possessive paradigm: only one wife/husband

 * LEXICON AN_DECL-ATIM	 for atim and mistatim.

 * LEXICON ANPOSS-ATIM  is also there to handle the highly irregular atim and mistatim

 * LEXICON ANVOC  

 * LEXICON AN_KININFL  

 * LEXICON AN_KININFL_PL  

 * LEXICON AN_DIMPOSS  Possessive suffixes to diminutives

 * LEXICON AN_KINiyINFL   Special treatment for kinship nouns ending with -iy - should be done in twolc?

 * LEXICON AN_DEP_INIT_M  for the inanimate possessive declension

 * LEXICON ANABLGENERIC  generic forms Sg, Pl, Loc and diminutives


!!The declinations for Inanimates

 * LEXICON INimDECLw_ONESYLL_SG  for the inanimate declension, stem -w, poss.-im-, dim. -is, only Sg

 * LEXICON INimDECL  for the inanimate declension, poss.-im-, dim. -is

 * LEXICON INimDECLisis  for the inanimate declension, poss.-im-, dim. -isis


 * LEXICON IN_DECL  for the inanimate declension, Dim: -is- and -isis-

 * LEXICON IN_DECL_PL  for the inanimate declension, plural Dim: -is- and -isis-


 * LEXICON IN_DECLis  for the inanimate declension, Dim: -is- 

 * LEXICON IN_DECLisis  for the inanimate declension, Dim: -isis-


 * LEXICON IN_DECL_OSI  for the inanimate declension of ôsi, an irregular noun


 * LEXICON IN_DIM  for the inanimate diminutives

 * LEXICON INABSDECL  for inanimate absolute declension

 * LEXICON INABSDECL_PL  for inanimate absolute declension


 * LEXICON INimDIM  the diminutives with poss.-im-, Dim: -is

 * LEXICON INimDIMisis  the diminutives with poss.-im-, Dim: -isis


 * LEXICON INimDIM-SG  the diminutives with poss.-im-, Dim: -is


LEXICON IN_DIMDECL Declensions inanimate diminutives, adding +Dim , not in use

 * LEXICON INDEP-DERIV_M_SG   for hardcoded noun:diminutive for inalienables

 * LEXICON IN_DEP_INIT_M_PL  for the inanimate possessive declension, plural lemmas

 * LEXICON IN_DEP_INIT_M  for the inanimate possessive declension


 * LEXICON INABLGENERIC  generic forms Sg, Pl, Loc and diminutives

 * LEXICON IN_DEP_INIT_M_DIM  for the inanimate possessive declension


 * LEXICON IN_DEP_INIT_M_SG  inanimate possessive declension, only Sg

!!Animate possessive suffixes

 * LEXICON ANSUFF_SG 

 * LEXICON ANSUFF_0POSS 

 * LEXICON SG_OBV 



 * LEXICON ANSUFF_Pl_0POSS 


 * LEXICON ANSUFF_PL 

 * LEXICON PL_OBV 







!!Inanimate possessive suffixes


 * LEXICON INSUFF_SG  


 * LEXICON INSUFF_PL  



 * LEXICON INSUFF_LOC 


 * LEXICON ANiySUFF_SG  


 * LEXICON ANiySUFF_PL 


!!Singular/plural suffixes



 * LEXICON SG_  


 * LEXICON PLa  


 * LEXICON PLak  


!!Locative suffixes

 * LEXICON LOC  

 * LEXICON LOCahk  

 * LEXICON LOCinaahk  For collective locative

!!Obviative suffix
 * LEXICON OBVIATIVE 


!!Special cases
 * LEXICON NOPREFIX  gives diacr.flag for no prefix. Used for hardcoded forms in the lexicon


                          !!!Plains Cree numerals                           

!!The file for numerals

 * LEXICON Numerals 





!!Here starts the 999 numbers

 * LEXICON UNDERTHOUSAND 

 * LEXICON HUNDREDS 

 * LEXICON CUODI 

 * LEXICON HUNDRED 



 * LEXICON TENS 

 * LEXICON TEN 




 * LEXICON ONESTONEXT 



 * LEXICON TEENS 

 * LEXICON ONES 

 * LEXICON CARDINAL 


 * LEXICON NUM  adds +Num+Ipc

 * __LEXICON NUM-PREFIXES   __

 * __LEXICON ARABIC   __ arabic numerals

 * __LEXICON ARABICLOOPphone   __ +358(0)16671254

 * __LEXICON ARABICCASEphone   __  

 * __LEXICON ARABICLOOP   __


 * __LEXICON ARABICLOOPORD   __ ordinals

 * __LEXICON NUMARABTAG   __ 








































                          !!!Plains Cree particles                           

The file

 * LEXICON pcle  adds +Ipc

 * LEXICON fpcle  this is for focus particles


 * LEXICON Particles  \\
 * cî+Ipc+Qst:cî # ; 
 * namôya+Ipc+Neg:namôya # ; 









Prefixes
--------
Prefixes in UNDEFINED language are bound to beginning of other words.


!!Plains Cree pronouns

There are more pronoums to be added here.

 LEXICON Pronoun 


 LEXICON Personal  \\
 niya+Pron+Pers+1Sg:niya # ; 
 niya+Pron+Pers+1Sg:nîya # ;  
 kiya+Pron+Pers+2Sg:kiya # ; 



 LEXICON Interrogative   \\
 awîna+Pron+Interr+Sg:awîna # "who,whose" ;
 awîna+Pron+Interr+Pl:awîniki # "who" ;

 LEXICON Indefinite  \\
 awiyak+Pron+Indef+AN+Sg:awiyak # "someone" ; 
 awiyak+Pron+Indef+AN+Pl:awiyakak # "some people" ;

 LEXICON Demonstrative    \\
ANIMATE \\
 awa+Pron+Dem+Prox+AN+Sg:awa # "this" ; 
 awa+Pron+Dem+Prox+AN+Pl:ôki # "these" ; 



INANIMATE \\

 ôma+Pron+Dem+Prox+IN+Sg:ôma # "this" ; 
 ôma+Pron+Dem+Prox+IN+Pl:ôhi # "these" ; 



 ôma+Pron+Def+Prox+IN+Sg:ôma # "this one" ; 
 ôma+Pron+Def+Prox+IN+Pl:ôhi # "these one" ; 


Punctuation marks 


Punctuation contains period, comma, parentheses, etc.


 %,+CLB:%,           # ; 
 %.+CLB:%.           # ; 
 %.%.+CLB:%.%.       # ; 
 ^excl+CLB:%!	    # ;	 !^C^






Plains Cree verb morphology                  




The Plains Cree verbs are divided in four groups:

# AI: Intransitive animate
# II: Intransitive inanimate
# TA: Transitive animate
# TI: Transitive inanimate



!!!Prefixes


 LEXICON VerbPrefixes   divides the lexicon into four modes: independent, conjunctive, imperative and future conditional

 * @U.mood.indep@ INDEPENDENT ;         
 * @U.mood.cnj@   CONJUNCT ;             
 *                IMPERATIVE ;          
 *                FUTURE_CONDITIONAL ;  


 LEXICON INDEPENDENT  gives flags and prefixes for personprefix


 LEXICON IND_TENSE  gives flags and prefixes for tense 


 LEXICON FUTURE_CONDITIONAL  gives flags for future conditional (no prefix)


 LEXICON CONJUNCT  gives flag for conjunctive and prefix ê-, kâ-, kâki-




 LEXICON CNJ_TENSE    gives prefixes and flags for tense in conjunctive


 LEXICON IMPERATIVE    gives flag for imperative (no prefixes)

Words marked GG are from Plains Cree Grammar guide and glossary


Preverbs

 LEXICON PREVERBS   just adds the prefix boundary







Now, lexc directs us to the ../stems/verbs.lexc file,
where we find all the verbal stems. The suffixes are then
found in the section "Suffixes" right underneath.


!!!Suffixes

fst:
AICONJ:  stem
AICONJw: stem (excl w)
Wolv:
AICONJ_n
AICONJ_w




LEXICON TACONJ_3 
TACONJ_2 ;

LEXICON TACONJ_4 
TACONJ_2 ;






Intransitive animate (AI)

 LEXICON AICONJ  splits in 4 moods

 LEXICON AICONJ-PL   splits in 4 moods, gives only plural forms.


 LEXICON AICONJw  splits in 4 moods, for verbs with final -w

 LEXICON AICONJn  splits in 4 moods, for verbs with final -n

 LEXICON AICONJn-PL  splits in 4 moods, for verbs with final -n


AI CONJ-CONT can take the wici- circumfix

 LEXICON AICONJ-CONT  






AI CONJ-CONT-PL can take the wici- circumfix (plural only)

 LEXICON AICONJ-CONT-PL  only plural forms.






AI CONJ-CONTn class Conjugations can take the wici- circumfix

 LEXICON AICONJ-CONTn  






AI n-sub class Conjugations can take the wici- circumfix (PL only)

 LEXICON AICONJ-CONTn-PL  






IND forms

 LEXICON AI_IND  First mode, indicative

 LEXICON AI_IND-PL  First mode, indicative, only plural forms


 LEXICON AI_INDn  First mode, indicative

 LEXICON AI_INDn-PL  First mode, indicative


Suffixation begins for AI IND classes


 LEXICON AI_IND_PRS  gives person suffixes


 LEXICON AI_IND_PRS-PL  gives person suffixes, only plural forms



 LEXICON AI_INDn_PRS  gives person suffixes


 LEXICON AI_INDn_PRS-PL  gives person suffixes



 LEXICON AI_FUT_CON  


 LEXICON AI_FUT_CON-PL  only plural forms.



 LEXICON AI_CNJ  Third mode, conjunctive

 LEXICON AI_CNJ-PL  Third mode, conjunctive, only plural forms


 LEXICON AI_CNJn  Third mode, conjunctive

 LEXICON AI_CNJn-PL  Third mode, conjunctive




 LEXICON AI_CNJ_PRS  singular forms

 LEXICON AI_CNJ_PRS-PL   plural forms


 LEXICON AI_CNJn_PRS 


 LEXICON AI_CNJn_PRS-PL 


 LEXICON AI_IMP   Fourth mode, imperative singular forms

 LEXICON AI_IMP-PL   Fourth mode, imperative, plural forms


 LEXICON AI_IMPn   Fourth mode, imperative

 LEXICON AI_IMPn-PL   Fourth mode, imperative



 LEXICON AI_IMP_LONG_E 

 LEXICON imp-long-E 


Intransitive inanimate (II)


 LEXICON IICONJ  splits in 4 moods

 LEXICON IICONJ-SG   splits in 4 moods, gives only plural forms.

 LEXICON IICONJ-PL  splits in 4 moods, for verbs with final -n



II Conjugation for stems ending in -w

 LEXICON IICONJw  splits in 4 moods

 LEXICON IICONJw-SG   splits in 4 moods, gives only plural forms.

 LEXICON IICONJw-PL  splits in 4 moods, for verbs with final -n





IICONJw wici chamber



IICONJ-CONT splits into 4 moods

 LEXICON IICONJ-CONT  splits according to mood

 LEXICON IICONJ-CONT-SG  splits according to mood

 LEXICON IICONJ-CONT-PL  splits according to mood



IICONJw-CONT splits into 4 moods

 LEXICON IICONJw-CONT  w final. Splits according to mood

 LEXICON IICONJw-CONT-SG  w final. Splits according to mood

 LEXICON IICONJw-CONT-PL  w final. Splits according to mood



Suffixation begins for II IND classes

 LEXICON II_INDw_PRS    w final 

 LEXICON II_INDw_PRS-SG    w final 

 LEXICON II_INDw_PRS-PL    w final 


 LEXICON II_INDw_PRS_Fut    w final 

 LEXICON II_INDw_PRS_Fut-SG    w final 

 LEXICON II_INDw_PRS_Fut-PL    w final 


 LEXICON II_IND_PRS    -n final 

 LEXICON II_IND_PRS-SG    -n final 

 LEXICON II_IND_PRS-PL    -n final 



 LEXICON II_IND_PRS_Fut    -n final 

 LEXICON II_IND_PRS_Fut-SG    -n final 

 LEXICON II_IND_PRS_Fut-PL    -n final 


Suffixation begins for II CNJ classes

 LEXICON II_CNJ_PRS    -n final 

 LEXICON II_CNJ_PRS-SG    -n final 

 LEXICON II_CNJ_PRS-PL    -n final 

 LEXICON II_CNJw_PRS    w final 

 LEXICON II_CNJw_PRS-SG    w final 

 LEXICON II_CNJw_PRS-PL    w final 







!!!Transitive animate (TA)

The VTA verbs split in different moods.
There are 5 stem classes in Wolv, 1-5 (VTA-1 through VTA-5)


 LEXICON TACONJ_1  

 * LEXICON TACONJ_2   Vw + i suf deletes w and i.

 * LEXICON TACONJ_2-PL   Vw + i suf deletes w and i. plural forms


 * LEXICON TACONJ_3   Cw where w + i become o

 * LEXICON TACONJ_4   TS

 * LEXICON TACONJ_5  

 * LEXICON TACONJ_5-TS  


 * LEXICON TACONJ-CONT 

 * LEXICON TACONJ-CONTTS 

 * LEXICON TACONJ-CONTVw 

 * LEXICON TACONJ-CONTVw-PL  plural forms

 * LEXICON TACONJ-CONTCw 

 * LEXICON TACONJ-CONTi 

 * LEXICON TACONJ-CONTTSi 


 LEXICON TA_IND_WICI  gives prs


 LEXICON TA_IND  gives prs


 LEXICON TA_INDTS_WICI  gives prs


 LEXICON TA_INDTS gives prs


 LEXICON TA_INDVw_WICI  gives prs


 LEXICON TA_INDVw gives prs



 LEXICON TA_INDVw-PL_WICI  gives prs, plural forms


 LEXICON TA_INDVw-PL gives prs




 LEXICON TA_INDCw_WICI  gives prs


 LEXICON TA_INDCw  gives prs




 LEXICON TA_IND_PERSPREF  gives tags for subject, flag for object, and directs to obj suffs

 LEXICON TA_INDTS_PERSPREF  gives tags for subject, flag for object, and directs to obj suffs

 LEXICON TA_INDVw_PERSPREF  gives tags for subject, flag for object, and directs to obj suffs

 LEXICON TA_INDVw_PERSPREF-PL  gives tags for subject, flag for object, and directs to obj suffs. Plural forms


 LEXICON TA_INDCw_PERSPREF  gives tags for subject, flag for object, and directs to obj suffs




 LEXICON VTA_NI_O   gives the objects suffixes matching 1Sg subject or 1Sg object






 LEXICON VTA_KI_O 	     gives the objects suffixes matching 2Sg subject













 LEXICON VTATS_KI_O 	     gives the objects suffixes matching 2Sg subject








 LEXICON VTAVw_NI_O   gives the objects suffixes matching 1Sg subject or 1Sg object



 LEXICON VTAVw_NI_O-PL    Plural forms




 LEXICON VTAVw_KI_O 	     gives the objects suffixes matching 2Sg subject



 LEXICON VTAVw_KI_O-PL 	     plural forms



 * LEXICON VTAVw_NULL_O 	  



 * LEXICON VTAVw_NULL_O-PL 	  



 LEXICON VTACw_NI_O   gives the objects suffixes matching 1Sg subject or 1Sg object




 LEXICON VTACw_KI_O 	     gives the objects suffixes matching 2Sg subject




 * LEXICON VTACw_NULL_O 	  







 LEXICON TA_CNJ_WICI  Third mode, conjunctive


 LEXICON TA_CNJ  Third mode, conjunctive



 LEXICON TA_CNJTS_WICI  Third mode, conjunctive


 LEXICON TA_CNJTS  Third mode, conjunctive


 LEXICON TA_CNJVw_WICI  Third mode, conjunctive


 LEXICON TA_CNJVw  Third mode, conjunctive



 LEXICON TA_CNJVw-PL_WICI  Third mode, conjunctive, plural forms


 LEXICON TA_CNJVw-PL  Third mode, conjunctive, plural forms




 LEXICON TA_CNJCw_WICI  Third mode, conjunctive


 LEXICON TA_CNJCw  Third mode, conjunctive





 LEXICON TA_CNJ_SUF  gives conj + obj tag and suf
















 LEXICON TA_CNJTS_SUF  gives conj + obj tag and suf





















 LEXICON TA_CNJVw_SUF  gives conj + obj tag and suf








 LEXICON TA_CNJVw_SUF-PL  gives conj + obj tag and suf, plural forms














 LEXICON TA_CNJCw_SUF  gives conj + obj tag and suf

















 * LEXICON TA_FUT_WICI 


 * LEXICON TA_FUT 




















 * LEXICON TA_FUTTS_WICI 


 * LEXICON TA_FUTTS 






















 * LEXICON TA_FUTVw_WICI 


 * LEXICON TA_FUTVw 














 * LEXICON TA_FUTVw-PL  plural
















 * LEXICON TA_FUTCw_WICI 




































 * LEXICON TA_IMPVw-PL_WICI  plural







 * LEXICON TA_IMPCw 














 * LEXICON 2Sg_Imp 

 * LEXICON 2Pl_Imp 

 * LEXICON 12Pl_Imp 

 * LEXICON 2SgTS_Imp 

 * LEXICON 2PlTS_Imp 

 * LEXICON 12PlTS_Imp 

 * LEXICON 2SgVw_Imp 

 * LEXICON 2PlVw_Imp 

LEXICON 12PlVw_Imp
+Imm+12Pl+3SgO:%>âtân # ;
+Imm+12Pl+3PlO:%>âtânik # ;
+Del+12Pl+3SgO:%>âhkahk # ;
+Del+12Pl+3PlO:%>âhkahkok # ;

 * LEXICON 2SgCw_Imp 

 * LEXICON 2PlCw_Imp 

 * LEXICON 12PlCw_Imp 

 * LEXICON 2Sgi_Imp 

 * LEXICON 2SgTSi_Imp 



Transitive Inanimate (TI)

 * LEXICON TICONJ   

 * LEXICON TICONJ-PL    Plural


 * LEXICON TICONJi   

 * LEXICON TICONJâ   


 * LEXICON TICONJ-CONT 

 * LEXICON TICONJ-CONT-PL  plural


 * LEXICON TICONJi-CONT 

 * LEXICON TICONJâ-CONT 























 LEXICON TI_IND  First mode, indicative

 LEXICON TI_IND-PL  First mode, indicative


 LEXICON TI_INDi  First mode, indicative

 LEXICON TI_INDâ  First mode, indicative


 LEXICON TI_IND_PRS  gives person suffixes singular






 LEXICON TI_IND_PRS-PL  gives person suffixes plural





 LEXICON TI_INDi_PRS  gives person suffixes



 LEXICON TI_INDâ_PRS  gives person suffixes




 * LEXICON TI_FUT_CON 

 * LEXICON TI_FUTi_CON 



 * LEXICON TI_FUTâ_CON 



 * LEXICON TI_FUT_CON-PL 


 LEXICON TI_CNJ  Third mode, conjunctive

 LEXICON TI_CNJ-PL  Third mode, conjunctive

 LEXICON TI_CNJi  Third mode, conjunctive

 LEXICON TI_CNJâ  Third mode, conjunctive

 * LEXICON TI_CNJ_SUF 

 * LEXICON TI_CNJ_SUF-PL 

 * LEXICON TI_CNJi_SUF 

 * LEXICON TI_CNJâ_SUF 




 * LEXICON TI_IMP 

 * LEXICON TI_IMP-PL 


 * LEXICON TI_IMPi 


 * LEXICON TI_IMPâ 


 * LEXICON TI_IMP_LONG_E 

 * LEXICON TI_imp-long-E 
