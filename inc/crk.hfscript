#!/bin/sh

# Script for creating a descriptive analyzer and a normative generator for crk

echo 'Concatenating LEXC files.' ;

cat src/morphology/root.lexc src/morphology/affixes/noun_affixes.lexc src/morphology/affixes/propernouns.lexc src/morphology/affixes/verb_affixes.lexc src/morphology/stems/abbreviations.lexc src/morphology/stems/crk-propernouns.lexc src/morphology/stems/noun_stems.lexc src/morphology/stems/numerals.lexc src/morphology/stems/particles.lexc src/morphology/stems/pronouns.lexc src/morphology/stems/verb_stems.lexc > crk.lexc

echo 'Compiling LEXC code.' ;

hfst-lexc crk.lexc -o crk-morph.hfst

echo 'Compiling TWOLC code.' ;

hfst-twolc -i $GTLANG_crk/src/phonology/crk-phon.twolc -o crk-phon.hfst

echo 'Composing and intersecting LEXC and TWOL transducers.' ;

hfst-compose-intersect crk-morph.hfst crk-phon.hfst | hfst-minimize - -o crk-gen-norm.hfst

echo 'Inverting normative generator transducer into a normative analyser transducer.' ;

hfst-invert crk-gen-norm.hfst -o crk-anl-norm.hfst

echo 'Compiling regular expression implementing spelling-relaxation.' ;

hfst-regexp2fst -S -i $GTLANG_crk/src/orthography/spellrelax.regex | hfst-invert -o crk-orth.hfst

echo 'Composing spelling relaxation transducer with normative analyser transducer to create descriptive analyser.'

hfst-compose -F -1 crk-orth.hfst -2 crk-anl-norm.hfst | hfst-minimize - -o crk-anl-desc.hfst

# hfst-invert crk-desc-anl.hfst -o crk-desc-gen.hfst

echo 'Creating optimized-lookup versions of selected transducers.' ;

hfst-fst2fst -O -i crk-anl-desc.hfst -o crk-anl-desc.hfstol

hfst-fst2fst -O -i crk-gen-norm.hfst -o crk-gen-norm.hfstol

# Creating an orthographically omnivorous (descriptive) analyser

# hfst-compose -1 $GTLANG_crk/src/orthography/Cans-to-Latn.compose.hfst -2 $GTLANG_crk/src/orthography/macron-to-circumfl.compose.hfst -o - | hfst-compose -F -1 - -2 crk-anl-desc.hfst | hfst-minimize | hfst-fst2fst -O - -o crk-anl-omni.hfstol
